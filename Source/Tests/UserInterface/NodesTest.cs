// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using SeleniumExtras.WaitHelpers;
using NUnit.Framework;
using UserInterface;
[TestFixture]
public class NodesTest {
  private IWebDriver driver;
    private WebDriverWait wait;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;
  [SetUp]
  public void SetUp() {
    driver = new ChromeDriver();
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
        driver.Manage().Window.Maximize();
        wait = new WebDriverWait(driver, TimeSpan.FromSeconds(40));
        PerformLogin();
    }
  [TearDown]
  protected void TearDown() {
    driver.Quit();
  }

    //handle login prior to tests running
    private void PerformLogin()
    {
        // Navigate to the login page
        driver.Navigate().GoToUrl(Settings.BaseURL + "/index.cshtml?name=AppHost");

        // Input username
        driver.FindElement(By.Id("username")).SendKeys(Settings.adminUsername);

        // Input password
        driver.FindElement(By.Id("password")).SendKeys(Settings.adminPassword);

        // Click login button
        driver.FindElement(By.Id("login")).Click();

        // Optional: Verify login success
        var correctPage = driver.FindElements(By.LinkText("Nodes"));
        var foundPElement = driver.FindElements(By.XPath("//p"));
    }

    [Test]
  public void nodesInfoPresent() {
        // Wait for and assert that the table with node cards is displayed
        IWebElement nodeCardsTable = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[1]/div/div/div/div")));
        Assert.That(nodeCardsTable.Displayed);

        // Wait for and assert that the System Center image is displayed
        IWebElement systemCenterImage = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//img[@alt='SystemCenter']")));
        Assert.That(systemCenterImage.Displayed);

        // Wait for and assert that the System Center console button is displayed
        IWebElement systemCenterConsoleButton = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//div[@id='window']/div/div/div/div/div[2]/div/div[2]/button")));
        Assert.That(systemCenterConsoleButton.Displayed);
    }
  [Test]
  public void nodesButtonclickandclose() {
        // Wait for and click the System Center Console button
        IWebElement systemCenterConsoleButton = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("//div[@id='window']/div/div/div/div/div[2]/div/div[2]/button")));
        systemCenterConsoleButton.Click();

        // Wait for and assert that the System Center console is loaded
        IWebElement systemCenterConsoleLoaded = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//h4")));
        Assert.That(systemCenterConsoleLoaded.Text, Is.EqualTo("Console - SystemCenter"));

        // Wait for and assert that the console window appears
        IWebElement consoleWindow = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//pre")));
        Assert.That(consoleWindow.Displayed);

        // Wait for and assert that the server command input is present
        IWebElement serverCommandInput = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//input")));
        Assert.That(serverCommandInput.Displayed);

        // Wait for and assert that the send button appears
        IWebElement sendButton = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//div[3]/button")));
        Assert.That(sendButton.Displayed);

        // Wait for and assert that the last update note appears
        IWebElement lastUpdateNote = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//em")));
        Assert.That(lastUpdateNote.Displayed);

        // Wait for and click the close button
        IWebElement closeButton = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[2]/div[1]/div/div/div[1]/button")));
        closeButton.Click();
    }
}
