// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using SeleniumExtras.WaitHelpers;
using NUnit.Framework;
using UserInterface;
[TestFixture]
public class EventTypesTest
{
    private IWebDriver driver;
    private WebDriverWait wait;
    public IDictionary<string, object> vars { get; private set; }
    private IJavaScriptExecutor js;
    [SetUp]
    public void SetUp()
    {
        driver = new ChromeDriver();
        js = (IJavaScriptExecutor)driver;
        vars = new Dictionary<string, object>();
        driver.Manage().Window.Maximize();
        wait = new WebDriverWait(driver, TimeSpan.FromSeconds(30));
        PerformLogin();
    }
    [TearDown]
    protected void TearDown()
    {
        driver.Quit();
    }

    //handle login prior to tests running
    private void PerformLogin()
    {
        // Navigate to the login page
        driver.Navigate().GoToUrl(Settings.BaseURL + "/index.cshtml?name=EventType");

        // Input username
        driver.FindElement(By.Id("username")).SendKeys(Settings.adminUsername);

        // Input password
        driver.FindElement(By.Id("password")).SendKeys(Settings.adminPassword);

        // Click login button
        driver.FindElement(By.Id("login")).Click();

        // Optional: Verify login success
        var correctPage = driver.FindElements(By.LinkText("Event Types"));
        var foundPElement = driver.FindElements(By.XPath("//p"));
    }

    [Test]
    public void eventTypesTableDataInfo()
    {
        // Click into table data
        IWebElement tableData = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("//div[@id='window']/div/div/div/div/div[2]/table/tbody/tr/td")));
        tableData.Click();

        // Name field
        IWebElement nameField = wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[2]/div/div/div")));
        Assert.That(nameField.Displayed);

        // Category Field
        IWebElement categoryField = wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[2]/div/div/div[2]")));
        Assert.That(categoryField.Displayed);

        // Label Field
        IWebElement labelField = wait.Until(ExpectedConditions.ElementExists(By.XPath("//div/div/div[3]")));
        Assert.That(labelField.Displayed);

        // Event type valid for
        IWebElement eventTypeValidFor = wait.Until(ExpectedConditions.ElementExists(By.XPath("//fieldset")));
        Assert.That(eventTypeValidFor.Displayed);

        // Footer with btns
        IWebElement footerWithBtns = wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[2]/div[1]/div/div/div[3]")));
        Assert.That(footerWithBtns.Displayed);

        // Close btn
        IWebElement closeBtn = wait.Until(ExpectedConditions.ElementExists(By.XPath("//button")));
        Assert.That(closeBtn.Displayed);
    }

    [Test]
    public void eventTypesSorting()
    {
        // Wait for and click on the name sort header
        IWebElement nameSortHeader = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[1]")));
        nameSortHeader.Click();

        // Wait for and assert that the arrow is present in the Name column
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[1]/div")));
        var nameArrowPresent = driver.FindElements(By.XPath("//th[1]/div"));
        Assert.That(nameArrowPresent.Count > 0);

        // Click on the Name sort header again (to toggle sorting)
        IWebElement nameSortHeaderAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[1]")));
        nameSortHeaderAgain.Click();

        // Wait for and click on the category sort header
        IWebElement categorySortHeader = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[2]")));
        categorySortHeader.Click();

        // Wait for and assert that the arrow is present in the Name column
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[2]/div")));
        var categoryArrow = driver.FindElements(By.XPath("//th[2]/div"));
        Assert.That(categoryArrow.Count > 0);

        // Click on the Name sort header again (to toggle sorting)
        IWebElement categorySortHeaderAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[2]")));
        categorySortHeaderAgain.Click();

        // Wait for and click on the desc sort header
        IWebElement descSortHeader = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[3]")));
        descSortHeader.Click();

        // Wait for and assert that the arrow is present in the Name column
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[3]/div")));
        var descArrow = driver.FindElements(By.XPath("//th[3]/div"));
        Assert.That(descArrow.Count > 0);

        // Click on the Name sort header again (to toggle sorting)
        IWebElement descSortHeaderAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[3]")));
        descSortHeaderAgain.Click();

        // Wait for and click on the show sort header
        IWebElement showSortHeader = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[4]")));
        showSortHeader.Click();

        // Wait for and assert that the arrow is present in the Name column
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[4]/div")));
        var showArrow = driver.FindElements(By.XPath("//th[4]/div"));
        Assert.That(showArrow.Count > 0);

        // Click on the Name sort header again (to toggle sorting)
        IWebElement showSortHeaderAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[4]")));
        showSortHeaderAgain.Click();


    }
}
