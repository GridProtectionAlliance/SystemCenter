// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using SeleniumExtras.WaitHelpers;
using NUnit.Framework;
using UserInterface;
[TestFixture]
public class AssetGroupFunctionalityTest
{
    private IWebDriver driver;
    private WebDriverWait wait;
    public IDictionary<string, object> vars { get; private set; }
    private IJavaScriptExecutor js;
    [SetUp]
    public void SetUp()
    {
        driver = new ChromeDriver();
        js = (IJavaScriptExecutor)driver;
        vars = new Dictionary<string, object>();
        driver.Manage().Window.Maximize();
        wait = new WebDriverWait(driver, TimeSpan.FromSeconds(40));
        PerformLogin();
    }
    [TearDown]
    protected void TearDown()
    {
        driver.Quit();
    }

    //handle login prior to tests running
    private void PerformLogin()
    {
        // Navigate to the login page
        driver.Navigate().GoToUrl(Settings.BaseURL + "/index.cshtml?name=AssetGroups");

        // Input username
        driver.FindElement(By.Id("username")).SendKeys(Settings.adminUsername);

        // Input password
        driver.FindElement(By.Id("password")).SendKeys(Settings.adminPassword);

        // Click login button
        driver.FindElement(By.Id("login")).Click();

        // Optional: Verify login success
        var metersPageLoad = driver.FindElements(By.LinkText("Asset Groups"));
        var foundMeters = driver.FindElements(By.XPath("//p"));
    }

    [Test]
    public void assetGroupsaInfoDisplayed()
    {
        // Name
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[1]")));
        var name = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[1]"));
        Assert.That(name.Count > 0);

        // Num of meters
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[3]")));
        var meters = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[3]"));
        Assert.That(meters.Count > 0);

        // Num of asset groups
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[4]")));
        var assetGrps = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[4]"));
        Assert.That(assetGrps.Count > 0);

        // Show in PQ dashboard
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[5]")));
        var dashboard = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[5]"));
        Assert.That(dashboard.Count > 0);

        // Found n asset groups
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[1]/nav/div/ul/li[1]/fieldset/form/div/div[1]/p")));
        var foundAssetGroups = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[1]/nav/div/ul/li[1]/fieldset/form/div/div[1]/p"));
        Assert.That(foundAssetGroups.Count > 0);

        // Asset group tool bar
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[1]/nav")));
        var toolBar = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[1]/nav"));
        Assert.That(toolBar.Count > 0);

        // Asset Groups table present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody")));
        var table = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody"));
        Assert.That(table.Count > 0);

        // Name TR/TD
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[1]")));
        var nameData = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[1]"));
        Assert.That(nameData.Count > 0);

        // Num of assets TR/TD
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[2]")));
        var assetsData = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[2]"));
        Assert.That(assetsData.Count > 0);

        // Num of meters TR/TD
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[3]")));
        var metersData = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[3]"));
        Assert.That(metersData.Count > 0);

        // Num of asset groups TR/TD
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[4]")));
        var groupsData = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[4]"));
        Assert.That(groupsData.Count > 0);

        // Show in dashboard TR/TD
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[5]")));
        var dashboardData = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[1]/td[5]"));
        Assert.That(dashboardData.Count > 0);
    }
  
    [Test]
    public void assetGroupsdAddNewAssetGroup()
    {
        // Add New Asset Group Btn
        IWebElement addNewAssetGroupBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[1]/nav/div/ul/li[2]/fieldset/form/div/button")));
        addNewAssetGroupBtn.Click();

        // Name warning
        IWebElement nameWarningElement = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div/div[1]/div[1]/div")));
        Assert.That(nameWarningElement.Text, Is.EqualTo("A unique Name of less than 50 characters is required."));

        // Send keys to name field
        IWebElement nameField = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div/div[1]/div[1]/input")));
        nameField.SendKeys("Test Asset Group");

        // Name character warning gone
        var warningElement = driver.FindElement(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div/div[1]/div[1]/div"));
        Assert.That(warningElement.Text, Is.Not.EqualTo("A unique Name of less than 50 characters is required."));

        // Add Transmission Assets Btn
        IWebElement addTransmissionAssetsBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div/div[2]/button[1]")));
        addTransmissionAssetsBtn.Click();

        // Add Current List to Selection
        IWebElement addCurrentListToSelectionBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[14]/div[1]/div/div/div[2]/div[1]/div/div/nav/div/ul/li[2]/fieldset/form/div[1]/div")));
        addCurrentListToSelectionBtn.Click();

        // Remove All
        IWebElement removeAllBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[14]/div[1]/div/div/div[2]/div[1]/div/div/nav/div/ul/li[2]/fieldset/form/div[2]/div")));
        removeAllBtn.Click();

        // Add Transmission Asset From List
        IWebElement addTransmissionAssetFromList = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[14]/div[1]/div/div/div[2]/div[2]/div[1]/table/tbody/tr[1]/td[1]")));
        addTransmissionAssetFromList.Click();

        // Save
        IWebElement saveTransmissionAssetBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[14]/div[1]/div/div/div[3]/button[1]")));
        saveTransmissionAssetBtn.Click();

        // Add Meters Btn
        IWebElement addMetersBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div/div[2]/button[2]")));
        addMetersBtn.Click();

        // Add Meters from list
        IWebElement addMetersFromList = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[10]/div[1]/div/div/div[2]/div[2]/div[1]/table/tbody/tr[1]/td[2]")));
        addMetersFromList.Click();

        // Save
        IWebElement saveMetersBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[10]/div[1]/div/div/div[3]/button[1]")));
        saveMetersBtn.Click();

        // Add Asset Groups Btn
        IWebElement addAssetGroupsBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div/div[2]/button[3]")));
        addAssetGroupsBtn.Click();

        // Add Asset Group from list
        IWebElement addAssetGroupFromList = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[18]/div[1]/div/div/div[2]/div[2]/div[1]/table/tbody/tr[1]/td[1]")));
        addAssetGroupFromList.Click();

        // Cancel Btn
        IWebElement cancelBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[18]/div[1]/div/div/div[3]/button[2]")));
        cancelBtn.Click();

        // Add btn
        IWebElement addBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[6]/div[1]/div/div/div[3]/button")));
        addBtn.Click();
    }
    [Test]
    public void assetGroupsEditAssetGroup()
    {
        // Click into asset group
        IWebElement assetGroup = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[6]/td[1]")));
        assetGroup.Click();

        // Confirm test group was selected
        IWebElement groupHeader = wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[1]/div[1]/h2")));
        Assert.That(groupHeader.Text, Is.EqualTo("Test Asset Group"));

        // Edit name
        IWebElement nameField = wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div[3]/div[2]/div/div[1]/div[1]/input")));
        nameField.SendKeys("1");

        // Save Changes btn
        IWebElement saveChangesBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[3]/div[3]/div[1]/button")));
        saveChangesBtn.Click();
    }
    [Test]
    public void assetGroupsfDeleteAssetGroup()
    {
        // Create a WebDriverWait instance with a timeout 
        WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(25));

        // Click into test group
        IWebElement testGroup = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/tbody/tr[6]/td[1]")));
        testGroup.Click();

        // Confirm test group is loaded (post edit)
        IWebElement groupHeader = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[1]/div/div/div/div/div[1]/div[1]/h2")));
        Assert.That(groupHeader.Text, Is.EqualTo("Test Asset Group1"));

        // Delete group btn
        IWebElement deleteGroupBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[1]/div[2]/button")));
        deleteGroupBtn.Click();

        // Cancel btn
        IWebElement cancelBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[2]/div[1]/div/div/div[3]/button[2]")));
        cancelBtn.Click();

        // Delete group btn
        deleteGroupBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[1]/div[2]/button")));
        deleteGroupBtn.Click();

        // Confirm btn
        IWebElement confirmBtn = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[2]/div[1]/div/div/div[3]/button[1]")));
        confirmBtn.Click();
    }

    [Test]
    public void assetGroupsgSorting() {
        //WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(15));
        // Name sort
        IWebElement nameSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[1]/div[1]")));
        nameSort.Click();
        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[1]/div")));
        var arrowPresent = driver.FindElements(By.XPath("//th[1]/div"));
        Assert.That(arrowPresent.Count > 0);
        // Name sort
        IWebElement nameSort2 = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[1]/div[1]")));
        nameSort2.Click();

        // Num assets Sort
        IWebElement keySort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[2]")));
        keySort.Click();
        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[2]/div")));
        var keyArrow = driver.FindElements(By.XPath("//th[2]/div"));
        Assert.That(keyArrow.Count > 0);
        // Num assets Sort
        IWebElement keySort2 = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[2]/div[2]")));
        keySort2.Click();

        // Num meters sort
        IWebElement typeSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[3]")));
        typeSort.Click();
        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[3]/div")));
        var typeArrow = driver.FindElements(By.XPath("//th[3]/div"));
        Assert.That(typeArrow.Count > 0);
        // Num meters sort
        IWebElement typeSort2 = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[3]")));
        typeSort2.Click();

        //Num Asset groups sort
        IWebElement voltageSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[4]")));
        voltageSort.Click();
        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[4]/div")));
        var voltageArrow = driver.FindElements(By.XPath("//th[4]/div"));
        Assert.That(voltageArrow.Count > 0);
        // Num asset groups sort
        IWebElement voltageSort2 = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[4]")));
        voltageSort2.Click();

        // show sort
        IWebElement metersSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[5]")));
        metersSort.Click();
        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[5]/div")));
        var metersArrow = driver.FindElements(By.XPath("//th[5]/div"));
        Assert.That(metersArrow.Count > 0);
        // show sort
        IWebElement metersSort2 = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/table/thead/tr/th[5]")));
        metersSort2.Click();
    }
}
