// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using SeleniumExtras.WaitHelpers;
using NUnit.Framework;
using UserInterface;
[TestFixture]
public class DeviceHealthReportTest
{
    // DEVICE HEALTH REPORT DOES NOT HAVE A TON TO TEST
    private IWebDriver driver;
    private WebDriverWait wait;
    public IDictionary<string, object> vars { get; private set; }
    private IJavaScriptExecutor js;
    [SetUp]
    public void SetUp()
    {
        driver = new ChromeDriver();
        js = (IJavaScriptExecutor)driver;
        vars = new Dictionary<string, object>();
        driver.Manage().Window.Maximize();
        wait = new WebDriverWait(driver, TimeSpan.FromSeconds(30));
        PerformLogin();
    }
    [TearDown]
    protected void TearDown()
    {
        driver.Quit();
    }

    //handle login prior to tests running
    private void PerformLogin()
    {
        // Navigate to the login page
        driver.Navigate().GoToUrl(Settings.BaseURL + "/index.cshtml?name=DeviceHealthReport");

        // Input username
        driver.FindElement(By.Id("username")).SendKeys(Settings.adminUsername);

        // Input password
        driver.FindElement(By.Id("password")).SendKeys(Settings.adminPassword);

        // Click login button
        driver.FindElement(By.Id("login")).Click();

        // Optional: Verify login success
        var correctPage = driver.FindElements(By.LinkText("Device Health Report"));
        var foundPElement = driver.FindElements(By.XPath("//p"));
    }

    [Test]
    public void deviceHealthReportInfoPresent()
    {
        // Wait for and assert that the toolbar is present
        IWebElement toolbar = wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[@id='window']/div/div/div/div/div/div/nav")));
        Assert.That(toolbar.Displayed);

        // Wait for and assert that the add filter button is present
        IWebElement addFilterButton = wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[@id='window']/div/div/div/div/div/div/nav/div/ul/li/fieldset/form/div/div[2]/button")));
        Assert.That(addFilterButton.Displayed);

        // Wait for and assert that the search bar is present
        IWebElement searchBar = wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[@id='window']/div/div/div/div/div/div/nav/div/ul/li/fieldset/form/div/div/div/input")));
        Assert.That(searchBar.Displayed);

        // Wait for and assert that the "Found n meter(s)" text is present
        IWebElement foundMetersText = wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[@id='window']/div/div/div/div/div/div/nav/div/ul/li/fieldset/form/div/div/p")));
        Assert.That(foundMetersText.Displayed);

        // Wait for and assert that the table is present
        IWebElement table = wait.Until(ExpectedConditions.ElementExists(By.XPath("//*[@id='window']/div/div/div/div/div[2]/div/table/tbody")));
        Assert.That(table.Displayed);

    }
    [Test]
    public void deviceHealthReportConfirmMeterLoad()
    {
        // Wait for and click on the link with MeterID=102 and MeterName=9
        IWebElement meterLink = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("//a[contains(@href, '/index.cshtml?name=Meter&MeterID=102&MeterName=9')]")));
        meterLink.Click();

        wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
        // Wait for and assert that the correct table item is loaded
        IWebElement tableItemHeader = wait.Until(ExpectedConditions.ElementExists(By.XPath("//a[contains(@href, \'/index.cshtml?name=Meter&MeterID=102&MeterName=9\')]")));
        Assert.That(tableItemHeader.Text, Is.EqualTo("9"));

    }
    [Test]
    public void deviceHealthReportSorting()
    {
        // Name sort
        IWebElement nameSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[1]")));
        nameSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[1]/div")));
        var nameArrow = driver.FindElements(By.XPath("//th[1]/div"));
        Assert.That(nameArrow.Count > 0);

        // Name sort again
        IWebElement nameSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[1]")));
        nameSortAgain.Click();

        // openMIC ID
        IWebElement keySort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[2]")));
        keySort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[2]/div")));
        var keyArrow = driver.FindElements(By.XPath("//th[2]/div"));
        Assert.That(keyArrow.Count > 0);

        // openMIC ID again
        IWebElement keySortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[2]")));
        keySortAgain.Click();

        // Substation
        IWebElement typeSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[3]")));
        typeSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[3]/div")));
        var typeArrow = driver.FindElements(By.XPath("//th[3]/div"));
        Assert.That(typeArrow.Count > 0);

        // Substation again
        IWebElement typeSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[3]")));
        typeSortAgain.Click();

        // Model
        IWebElement voltageSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[4]")));
        voltageSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[4]/div")));
        var voltageArrow = driver.FindElements(By.XPath("//th[4]/div"));
        Assert.That(voltageArrow.Count > 0);

        // Model again
        IWebElement voltageSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[4]")));
        voltageSortAgain.Click();

        // TSC
        IWebElement metersSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[5]")));
        metersSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[5]/div")));
        var metersArrow = driver.FindElements(By.XPath("//th[5]/div"));
        Assert.That(metersArrow.Count > 0);

        // TSC again
        IWebElement metersSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[5]")));
        metersSortAgain.Click();

        // Last Successful connection
        IWebElement substationSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[8]")));
        substationSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[8]/div")));
        var substationArrow = driver.FindElements(By.XPath("//th[8]/div"));
        Assert.That(substationArrow.Count > 0);

        // Last Successful connection again
        IWebElement substationSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[8]")));
        substationSortAgain.Click();

        // Bad Days
        IWebElement badDaysSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[9]")));
        badDaysSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[9]/div")));
        var badDaysArrow = driver.FindElements(By.XPath("//th[9]/div"));
        Assert.That(badDaysArrow.Count > 0);

        // Bad Days again
        IWebElement badDaysSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[9]")));
        badDaysSortAgain.Click();

        // MIC
        IWebElement micSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[11]")));
        micSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[11]/div")));
        var micArrow = driver.FindElements(By.XPath("//th[11]/div"));
        Assert.That(micArrow.Count > 0);

        // MIC again
        IWebElement micSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[11]")));
        micSortAgain.Click();

        // miMD
        IWebElement midSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[12]")));
        midSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[12]/div")));
        var midArrow = driver.FindElements(By.XPath("//th[12]/div"));
        Assert.That(midArrow.Count > 0);

        // miMD again
        IWebElement midSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[12]")));
        midSortAgain.Click();

        // XDA
        IWebElement xdaSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[13]")));
        xdaSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[13]/div")));
        var xdaArrow = driver.FindElements(By.XPath("//th[13]/div"));
        Assert.That(xdaArrow.Count > 0);

        // XDA again
        IWebElement xdaSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[13]")));
        xdaSortAgain.Click();

        // DQ
        IWebElement dqSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[14]")));
        dqSort.Click();

        // Arrow present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[14]/div")));
        var dqArrow = driver.FindElements(By.XPath("//th[14]/div"));
        Assert.That(dqArrow.Count > 0);

        // DQ again
        IWebElement dqSortAgain = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div[2]/div/table/thead/tr/th[14]")));
        dqSortAgain.Click();

    }
}
