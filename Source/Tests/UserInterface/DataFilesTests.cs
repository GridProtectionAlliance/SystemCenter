// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using SeleniumExtras.WaitHelpers;
using NUnit.Framework;
[TestFixture]
public class DataFilesTests
{
    private IWebDriver driver;
    private WebDriverWait wait;
    public IDictionary<string, object> vars { get; private set; }
    private IJavaScriptExecutor js;
    [SetUp]
    public void SetUp()
    {
        driver = new ChromeDriver();
        js = (IJavaScriptExecutor)driver;
        vars = new Dictionary<string, object>();
        driver.Manage().Window.Maximize();
        wait = new WebDriverWait(driver, TimeSpan.FromSeconds(30));
        PerformLogin();
    }
    [TearDown]
    protected void TearDown()
    {
        driver.Quit();
    }

    //handle login prior to tests running
    private void PerformLogin()
    {
        // Navigate to the login page
        driver.Navigate().GoToUrl("https://systemcenter.demo.gridprotectionalliance.org/index.cshtml?name=DataFiles");

        // Input username
        driver.FindElement(By.Id("username")).SendKeys("Admin");

        // Input password
        driver.FindElement(By.Id("password")).SendKeys("7h1515457r0ngP455w0rd");

        // Click login button
        driver.FindElement(By.Id("login")).Click();

        // Optional: Verify login success
        var metersPageLoad = driver.FindElements(By.LinkText("Data Files"));
        var foundMeters = driver.FindElements(By.XPath("//p"));
    }

    [Test]
    public void dataFilesDataNavigation()
    {
        // Move to different page (2)
        IWebElement page2Link = wait.Until(ExpectedConditions.ElementToBeClickable(By.LinkText("2")));
        page2Link.Click();

        // Move to different page (3)
        IWebElement page3Link = wait.Until(ExpectedConditions.ElementToBeClickable(By.LinkText("3")));
        page3Link.Click();

        // Move to different page via previous
        IWebElement previousPageButton = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("//div[3]/div/ul/li")));
        previousPageButton.Click();

        // Confirm first table child of page 2 (Will fail because previous/next buttons do not function)
        try
        {
            IWebElement firstTableChildPage2 = wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//td[contains(text(),'C:\\Program Files\\openMIC\\Downloads\\Bludhaven 13-T1\\Trend\\trend-20201105.pqd')]")));
            Assert.That(firstTableChildPage2.Text, Is.EqualTo("C:\\Program Files\\openMIC\\Downloads\\Bludhaven 13-T1\\Trend\\trend-20201105.pqd"));
        }
        catch (WebDriverTimeoutException)
        {
            // Expected failure because the previous/next buttons do not function
            Assert.Fail("Navigation via previous button failed as expected due to known issue with previous/next buttons not functioning.");
        }

    }
    [Test]
    public void dataFilesFileinfo()
    {
        // Click first item in file path list
        IWebElement firstFilePathItem = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("/html/body/div[1]/div/div/div/div/div/div[2]/table/tbody/tr[1]/td[1]")));
        firstFilePathItem.Click();

        // Alert
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[1]")));
        var alertElements = driver.FindElements(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[1]"));
        Assert.That(alertElements.Count > 0);

        // Path
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[2]/div/p[1]")));
        var pathElements = driver.FindElements(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[2]/div/p[1]"));
        Assert.That(pathElements.Count > 0);

        // Name
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[2]/div/p[2]")));
        var nameElements = driver.FindElements(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[2]/div/p[2]"));
        Assert.That(nameElements.Count > 0);

        // Size
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[2]/div/p[3]")));
        var sizeElements = driver.FindElements(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[2]/div/p[3]"));
        Assert.That(sizeElements.Count > 0);

        // Created
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[2]/div/p[4]")));
        var createdElements = driver.FindElements(By.XPath("/html/body/div[6]/div[1]/div/div/div[2]/div[2]/div/p[4]"));
        Assert.That(createdElements.Count > 0);

        // Last Write
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//p[5]")));
        var lastWriteElements = driver.FindElements(By.XPath("//p[5]"));
        Assert.That(lastWriteElements.Count > 0);

        // Last Access
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//p[6]")));
        var lastAccessElements = driver.FindElements(By.XPath("//p[6]"));
        Assert.That(lastAccessElements.Count > 0);

        // Processed
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//p[7]")));
        var processedElements = driver.FindElements(By.XPath("//p[7]"));
        Assert.That(processedElements.Count > 0);

        // Get File
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//a[contains(.,'Get File')]")));
        var getFileElements = driver.FindElements(By.XPath("//a[contains(.,'Get File')]"));
        Assert.That(getFileElements.Count > 0);

        // Event ID
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[4]/div/table/thead/tr/th/div")));
        var eventIdElements = driver.FindElements(By.XPath("//div[4]/div/table/thead/tr/th/div"));
        Assert.That(eventIdElements.Count > 0);

        // Event Start
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[4]/div/table/thead/tr/th[2]/div")));
        var eventStartElements = driver.FindElements(By.XPath("//div[4]/div/table/thead/tr/th[2]/div"));
        Assert.That(eventStartElements.Count > 0);

        // Event End
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[4]/div/table/thead/tr/th[3]/div")));
        var eventEndElements = driver.FindElements(By.XPath("//div[4]/div/table/thead/tr/th[3]/div"));
        Assert.That(eventEndElements.Count > 0);

        // Reprocess File
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//button[contains(.,'Reprocess File')]")));
        var reprocessFileElements = driver.FindElements(By.XPath("//button[contains(.,'Reprocess File')]"));
        Assert.That(reprocessFileElements.Count > 0);

    }
    [Test]
    public void dataFilesFilters()
    {
        // File path sort
        IWebElement filePathSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("//div[2]/table/thead/tr/th")));
        filePathSort.Click();

        // Arrow moves on new sort
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[1]/div")));
        var filePathSortArrows = driver.FindElements(By.XPath("//th[1]/div"));
        Assert.That(filePathSortArrows.Count > 0);

        // File path sort again
        filePathSort.Click();

        // File processed sort
        IWebElement fileProcessedSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("//div[2]/table/thead/tr/th[2]")));
        fileProcessedSort.Click();

        // Arrow moves on new sort
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[2]/div")));
        var fileProcessedSortArrows = driver.FindElements(By.XPath("//th[2]/div"));
        Assert.That(fileProcessedSortArrows.Count > 0);

        // File process sort again
        fileProcessedSort.Click();

        // Data start sort
        IWebElement dataStartSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("//div[2]/table/thead/tr/th[3]")));
        dataStartSort.Click();

        // Arrow moves on new sort
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[3]/div")));
        var dataStartSortArrows = driver.FindElements(By.XPath("//th[3]/div"));
        Assert.That(dataStartSortArrows.Count > 0);

        // Data start sort again
        dataStartSort.Click();

        // Status sort
        IWebElement statusSort = wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath("//div[2]/table/thead/tr/th[4]")));
        statusSort.Click();

        // Arrow moves on new sort
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//th[4]/div")));
        var statusSortArrows = driver.FindElements(By.XPath("//th[4]/div"));
        Assert.That(statusSortArrows.Count > 0);

        // Status sort again
        statusSort.Click();

    }
    [Test]
    public void dataFilesInfoPresent()
    {
        // Data files toolbar present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//div/div/div/div/nav")));
        var toolbar = driver.FindElements(By.XPath("//div/div/div/div/nav"));
        Assert.That(toolbar.Count > 0);

        // Displaying data files - n/n
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//p")));
        var dataFilesCount = driver.FindElements(By.XPath("//p"));
        Assert.That(dataFilesCount.Count > 0);

        // Search file path
        wait.Until(ExpectedConditions.ElementExists(By.XPath("/html/body/div[1]/div/div/div/div/div/div[1]/div/nav/div/ul/li[1]/fieldset/form/div/div[1]/div/input")));
        var searchFilePath = driver.FindElements(By.XPath("/html/body/div[1]/div/div/div/div/div/div[1]/div/nav/div/ul/li[1]/fieldset/form/div/div[1]/div/input"));
        Assert.That(searchFilePath.Count > 0);

        // Reprocess button
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//form/div/button")));
        var reprocessButton = driver.FindElements(By.XPath("//form/div/button"));
        Assert.That(reprocessButton.Count > 0);

        // Path TR/TD data present
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//td")));
        var pathTRTDData = driver.FindElements(By.XPath("//td"));
        Assert.That(pathTRTDData.Count > 0);

        // Page navigation
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[3]/div/ul")));
        var pageNavigation = driver.FindElements(By.XPath("//div[3]/div/ul"));
        Assert.That(pageNavigation.Count > 0);

    }
}
