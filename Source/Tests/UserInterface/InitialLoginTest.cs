// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using SeleniumExtras.WaitHelpers;
using NUnit.Framework;
[TestFixture]
public class InitialLoginTest
{
    private IWebDriver driver;
    private WebDriverWait wait;

    public IDictionary<string, object> vars { get; private set; }
    private IJavaScriptExecutor js;
    [SetUp]
    public void SetUp()
    {
        driver = new ChromeDriver();
        js = (IJavaScriptExecutor)driver;
        vars = new Dictionary<string, object>();
        driver.Manage().Window.Maximize();
        wait = new WebDriverWait(driver, TimeSpan.FromSeconds(30));

    }
    [TearDown]
    protected void TearDown()
    {
        driver.Quit();
    }

    private void PerformLogin(string username, string password)
    {
        driver.Navigate().GoToUrl("https://systemcenter.demo.gridprotectionalliance.org/index.cshtml?name=Meters");

        // Use WebDriverWait to ensure elements are present and interactable
        var usernameField = wait.Until(d => d.FindElement(By.Id("username")));
        usernameField.SendKeys(username);

        var passwordField = wait.Until(d => d.FindElement(By.Id("password")));
        passwordField.SendKeys(password);

        var loginButton = wait.Until(d => d.FindElement(By.Id("login")));
        loginButton.Click();
    }

    [Test]
    public void attemptIncorrectLogin()
    {
        PerformLogin("Admin", "sfsfsef");

        var loginFail = wait.Until(d => d.FindElements(By.Id("responsePanel")));
    }
    [Test]
    public void attemptInitialLogin()
    {
        PerformLogin("Admin", "7h1515457r0ngP455w0rd");

        var meters = wait.Until(d => d.FindElements(By.LinkText("Meters")));

        var nMeters = wait.Until(d => d.FindElements(By.XPath("//p")));
    }
    [Test]
    public void postLoginInfoPresent()
    {
        PerformLogin("Admin", "7h1515457r0ngP455w0rd");

        // Monitors and Assets Section
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[1]")));
        var monitorsAndAssets = driver.FindElements(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[1]"));
        Assert.That(monitorsAndAssets.Count > 0);

        // File processing section
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[2]")));
        var fileProcessing = driver.FindElements(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[2]"));
        Assert.That(fileProcessing.Count > 0);

        // External Links Section
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[3]")));
        var extenralLinks = driver.FindElements(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[3]"));
        Assert.That(extenralLinks.Count > 0);

        // System Setting Section
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[5]")));
        var systemsSettings = driver.FindElements(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[5]"));
        Assert.That(systemsSettings.Count > 0);

        // Table Loaded
        driver.FindElement(By.XPath("//div/div/div[2]")).Click();

        // User Settings
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[6]")));
        var userSettings = driver.FindElements(By.XPath("/html/body/div[1]/div/div/nav/div[1]/h6[6]"));
        Assert.That(userSettings.Count > 0);

        // Version
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//div[2]/div/span")));
        var version = driver.FindElements(By.XPath("//div[2]/div/span"));
        Assert.That(version.Count > 0);

        // System Center
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//h3[contains(.,\'System Center\')]")));
        var systemCenter = driver.FindElements(By.XPath("//h3[contains(.,\'System Center\')]"));
        Assert.That(systemCenter.Count > 0);

        // Image
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("/html/body/div[1]/nav/a/img")));
        var image = driver.FindElements(By.XPath("/html/body/div[1]/nav/a/img"));
        Assert.That(image.Count > 0);

        // Sign out
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(text(),\'Sign out\')]")));
        var signOut = driver.FindElements(By.XPath("//a[contains(text(),\'Sign out\')]"));
        Assert.That(signOut.Count > 0);

        // Meters
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Meters\')]")));
        var metersLink = driver.FindElements(By.XPath("//a[contains(.,\'Meters\')]"));
        Assert.That(metersLink.Count > 0);

        // Substation
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Substations\')]")));
        var substation = driver.FindElements(By.XPath("//a[contains(.,\'Substations\')]"));
        Assert.That(substation.Count > 0);

        // Assets
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Assets\')]")));
        var assets = driver.FindElements(By.XPath("//a[contains(.,\'Assets\')]"));
        Assert.That(assets.Count > 0);

        // Asset Groups
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Asset Groups\')]")));
        var assetGroups = driver.FindElements(By.XPath("//a[contains(.,\'Asset Groups\')]"));
        Assert.That(assetGroups.Count > 0);

        // Line Segments
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Line Segments\')]")));
        var lineSegments = driver.FindElements(By.XPath("//a[contains(.,\'Line Segments\')]"));
        Assert.That(lineSegments.Count > 0);

        // Customers
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Customers\')]")));
        var customers = driver.FindElements(By.XPath("//a[contains(.,\'Customers\')]"));
        Assert.That(customers.Count > 0);

        // Device Health Report
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Device Health Report\')]")));
        var deviceHealthReport = driver.FindElements(By.XPath("//a[contains(.,\'Device Health Report\')]"));
        Assert.That(deviceHealthReport.Count > 0);

        // Data Files
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Data Files\')]")));
        var dataFiles = driver.FindElements(By.XPath("//a[contains(.,\'Data Files\')]"));
        Assert.That(dataFiles.Count > 0);

        // Data Operations
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Data Operations\')]")));
        var dataOperations = driver.FindElements(By.XPath("//a[contains(.,\'Data Operations\')]"));
        Assert.That(dataOperations.Count > 0);

        // Data Readers
        wait.Until(ExpectedConditions.ElementIsVisible(By.LinkText("Data Readers")));
        var dataReaders = driver.FindElements(By.LinkText("Data Readers"));
        Assert.That(dataReaders.Count > 0);

        // MATLAB
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'MATLAB Analytics\')]")));
        var matlab = driver.FindElements(By.XPath("//a[contains(.,\'MATLAB Analytics\')]"));
        Assert.That(matlab.Count > 0);

        // Database Cleanup
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Database Cleanup\')]")));
        var databaseCleanup = driver.FindElements(By.XPath("//a[contains(.,\'Database Cleanup\')]"));
        Assert.That(databaseCleanup.Count > 0);

        // Remote openXDA Instances
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Remote openXDA Instances\')]")));
        var remoteOpenXda = driver.FindElements(By.XPath("//a[contains(.,\'Remote openXDA Instances\')]"));
        Assert.That(remoteOpenXda.Count > 0);

        // External Databases
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'External Databases\')]")));
        var externalDatabases = driver.FindElements(By.XPath("//a[contains(.,\'External Databases\')]"));
        Assert.That(externalDatabases.Count > 0);

        // External tables
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'External Tables\')]")));
        var externalTables = driver.FindElements(By.XPath("//a[contains(.,\'External Tables\')]"));
        Assert.That(externalTables.Count > 0);

        // Event Types
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Event Types\')]")));
        var eventTypes = driver.FindElements(By.XPath("//a[contains(.,\'Event Types\')]"));
        Assert.That(eventTypes.Count > 0);

        // Value Lists
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Value Lists\')]")));
        var valueLists = driver.FindElements(By.XPath("//a[contains(.,\'Value Lists\')]"));
        Assert.That(valueLists.Count > 0);

        // Channel Groups
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Channel Groups\')]")));
        var channelGroups = driver.FindElements(By.XPath("//a[contains(.,\'Channel Groups\')]"));
        Assert.That(channelGroups.Count > 0);

        // PQ Browser Tabs
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'PQ Browser Tabs\')]")));
        var pqBrowserTabs = driver.FindElements(By.XPath("//a[contains(.,\'PQ Browser Tabs\')]"));
        Assert.That(pqBrowserTabs.Count > 0);

        // PQ Browser Widgets
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'PQ Browser Widgets\')]")));
        var pwBrowserWidgets = driver.FindElements(By.XPath("//a[contains(.,\'PQ Browser Widgets\')]"));
        Assert.That(pwBrowserWidgets.Count > 0);

        // MagDur Curves
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'MagDur Curves\')]")));
        var madDurCurves = driver.FindElements(By.XPath("//a[contains(.,\'MagDur Curves\')]"));
        Assert.That(madDurCurves.Count > 0);

        // Event Tags
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Event Tags\')]")));
        var eventTags = driver.FindElements(By.XPath("//a[contains(.,\'Event Tags\')]"));
        Assert.That(eventTags.Count > 0);

        // Application Categories
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Application Categories\')]")));
        var applicationCategories = driver.FindElements(By.XPath("//a[contains(.,\'Application Categories\')]"));
        Assert.That(applicationCategories.Count > 0);

        // Nodes
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Nodes\')]")));
        var nodes = driver.FindElements(By.XPath("//a[contains(.,\'Nodes\')]"));
        Assert.That(nodes.Count > 0);

        // System Center (Link)
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'System Center\')]")));
        var systemCenterLink = driver.FindElements(By.XPath("//a[contains(.,\'System Center\')]"));
        Assert.That(systemCenterLink.Count > 0);

        // openXDA
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(@href, \'/index.cshtml?name=Settings&System=OpenXDA\')]")));
        var openXdaLink = driver.FindElements(By.XPath("//a[contains(@href, \'/index.cshtml?name=Settings&System=OpenXDA\')]"));
        Assert.That(openXdaLink.Count > 0);

        // Additional Fields
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(@href, \'/index.cshtml?name=ByAdditionalField\')]")));
        var additionalFieldsLink = driver.FindElements(By.XPath("//a[contains(@href, \'/index.cshtml?name=ByAdditionalField\')]"));
        Assert.That(additionalFieldsLink.Count > 0);

        // miMD
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'miMD\')]")));
        var mimd = driver.FindElements(By.XPath("//a[contains(.,\'miMD\')]"));
        Assert.That(mimd.Count > 0);

        // SSO Applications
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'SSO Applications\')]")));
        var ssoApp = driver.FindElements(By.XPath("//a[contains(.,\'SSO Applications\')]"));
        Assert.That(ssoApp.Count > 0);

        // User Statistics
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'User Statistics\')]")));
        var userStats = driver.FindElements(By.XPath("//a[contains(.,\'User Statistics\')]"));
        Assert.That(userStats.Count > 0);

        // Users
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'Users\')]")));
        var users = driver.FindElements(By.XPath("//a[contains(.,\'Users\')]"));
        Assert.That(users.Count > 0);

        // User Groups
        wait.Until(ExpectedConditions.ElementIsVisible(By.XPath("//a[contains(.,\'User Groups\')]")));
        var userGroups = driver.FindElements(By.XPath("//a[contains(.,\'User Groups\')]"));
        Assert.That(userGroups.Count > 0);

    }
}
