(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{319:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n(45),o=n(31),l=n(30),c=n(3),i=n(66),s=function(e,t,n,a){return new(n||(n=Promise))((function(r,o){function l(e){try{i(a.next(e))}catch(e){o(e)}}function c(e){try{i(a.throw(e))}catch(e){o(e)}}function i(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,c)}i((a=a.apply(e,t||[])).next())}))},u=function(e,t){var n,a,r,o,l={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function c(o){return function(c){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;l;)try{if(n=1,a&&(r=2&o[0]?a.return:o[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,o[1])).done)return r;switch(a=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return l.label++,{value:o[1],done:!1};case 5:l.label++,a=o[1],o=[0];continue;case 7:o=l.ops.pop(),l.trys.pop();continue;default:if(!(r=l.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){l=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){l.label=o[1];break}if(6===o[0]&&l.label<r[1]){l.label=r[1],r=o;break}if(r&&l.label<r[2]){l.label=r[2],l.ops.push(o);break}r[2]&&l.ops.pop(),l.trys.pop();continue}o=t.call(e,l)}catch(e){o=[6,e],a=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,c])}}},p=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var a,r,o=n.call(e),l=[];try{for(;(void 0===t||t-- >0)&&!(a=o.next()).done;)l.push(a.value)}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return l};t.default=function(e){Object(c.useHistory)();var t=window.innerWidth-250-30,n=.33*(window.innerHeight-75),h=50,d=t-h-20,y=n-20-20,f=p(a.useState([]),2),m=(f[0],f[1],p(a.useState([]),2)),g=(m[0],m[1],p(a.useState(30),2)),w=g[0],v=g[1],b=p(a.useState(null),2),S=(b[0],b[1],p(a.useState(null),2)),E=(S[0],S[1],p(a.useState("SystemCenter"),2)),k=E[0],x=E[1],j=p(a.useState([]),2),T=j[0],C=j[1],N=p(a.useState("Logins"),2),P=N[0],A=N[1],L=p(a.useState(!1),2),O=L[0],U=L[1];function $(e,t){return s(this,void 0,void 0,(function(){var n,a;return u(this,(function(r){switch(r.label){case 0:return[4,Object(i.a)("SystemCenter",e)];case 1:return n=r.sent(),[4,Object(i.a)("OpenXDA",e)];case 2:return a=r.sent(),function(e,t){var n=e.map((function(n,a){return Math.max(e[a].Count,t[a].Count)})),a=l.scaleTime().rangeRound([0,d]),r=l.scaleLinear().rangeRound([y-15,0]),o=l.line().x((function(e){return a(moment(e.Date))})).y((function(e){return r(e.Count)}));r.domain(l.extent(n,(function(e){return e}))),a.domain(l.extent(e,(function(e){return moment(e.Date)}))),l.select("#yaxis").call(l.axisLeft(r)).call((function(e){return e.select(".domain").remove()})),l.select("#xaxis").call(l.axisBottom(a)).call((function(e){return e.select(".domain").remove()})),l.select("#scapath").datum(e).attr("d",o),l.select("#xdapath").datum(t).attr("d",o)}(n,a),D(t),[2]}}))}))}function D(e){return s(this,void 0,void 0,(function(){var t,n;return u(this,(function(a){switch(a.label){case 0:return[4,Object(i.b)(e,w)];case 1:return t=a.sent(),n=o.orderBy(t,[P],[O?"asc":"desc"]),C(n),[2]}}))}))}return a.useEffect((function(){$(w,k)}),[]),e.Roles.indexOf("Administrator")<0?null:a.createElement("div",{style:{width:"100%",height:"100%",padding:"10px 10px 10px 20px"}},a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement("h2",null,"User Statistics")),a.createElement("div",{className:"col"},a.createElement("select",{className:"form-control",value:w,onChange:function(e){v(parseInt(e.target.value)),$(parseInt(e.target.value),k)}},a.createElement("option",{value:"30"},"Last 30 days"),a.createElement("option",{value:"60"},"Last 60 days"),a.createElement("option",{value:"90"},"Last 90 days"),a.createElement("option",{value:"180"},"Last 180 days"),a.createElement("option",{value:"365"},"Last 365 days")))),a.createElement("hr",null),a.createElement("div",{style:{width:"100%",height:"calc( 100%)"}},a.createElement("svg",{width:t,height:n,style:{border:"1px solid lightgray"}},a.createElement("g",{id:"xaxis",transform:"translate("+(h-20)+","+(y+10)+")"}),a.createElement("g",{id:"yaxis",transform:"translate("+(h-20)+",25)"}),a.createElement("g",{transform:"translate("+(h-20)+",25)"},a.createElement("path",{id:"scapath",fill:"none",strokeLinejoin:"round",strokeWidth:"1.5",stroke:"steelblue"}),a.createElement("path",{id:"xdapath",fill:"none",strokeLinejoin:"round",strokeWidth:"1.5",stroke:"red"}))),a.createElement("div",{style:{width:"100%",height:"calc(100% - "+n+"px)"}},a.createElement("ul",{className:"nav nav-tabs"},a.createElement("li",{className:"nav-item"},a.createElement("a",{className:"nav-link"+("SystemCenter"==k?" active":""),onClick:function(){x("SystemCenter"),D("SystemCenter")}},a.createElement("svg",{width:"20",height:"20"},a.createElement("rect",{width:"20",height:"20",fill:"steelblue",strokeWidth:"3",stroke:"rgb(0,0,0)"})),a.createElement("span",{style:{marginLeft:10}},"System Center"))),a.createElement("li",{className:"nav-item"},a.createElement("a",{className:"nav-link"+("OpenXDA"==k?" active":""),onClick:function(){x("OpenXDA"),D("OpenXDA")}},a.createElement("svg",{width:"20",height:"20"},a.createElement("rect",{width:"20",height:"20",fill:"red",strokeWidth:"3",stroke:"rgb(0,0,0)"})),a.createElement("span",{style:{marginLeft:10}},"OpenXDA")))),a.createElement("div",{className:"tab-content",style:{maxHeight:window.innerHeight-235,overflow:"hidden"}},a.createElement("div",{className:"tab-pane  active"},a.createElement(r.a,{cols:[{key:"UserName",label:"User",headerStyle:{width:"10%"},rowStyle:{width:"10%"}},{key:"Logins",label:"Logins for Period",headerStyle:{width:"10%"},rowStyle:{width:"10%"}},{key:"LastAccess",label:"Last Access Time ",headerStyle:{width:"auto"},rowStyle:{width:"auto"}}],tableClass:"table table-hover",data:T,sortField:P,ascending:O,onSort:function(e){if(e.col==P){var t=o.orderBy(T,[e.col],[O?"desc":"asc"]);C(t)}else{t=o.orderBy(T,[e.col],["asc"]);C(t),A(e.col)}U(!O)},onClick:function(){},theadStyle:{fontSize:"smaller",display:"table",tableLayout:"fixed",width:"100%"},tbodyStyle:{display:"block",overflowY:"scroll",maxHeight:window.innerHeight-300,width:"100%"},rowStyle:{fontSize:"smaller",display:"table",tableLayout:"fixed",width:"100%"},selected:function(e){return!1}}))))))}},45:function(e,t,n){"use strict";var a,r=n(0),o=n(31),l=(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),c=function(e){return r.createElement("span",{style:{width:10,height:10,margin:3},className:"fa fa-angle-"+(e.ascending?"up":"down")})},i=function(e){function t(t){return e.call(this,t)||this}return l(t,e),t.prototype.componentDidUpdate=function(e,t){},t.prototype.render=function(){var e=this.generateRows(),t=this.generateHeaders();return r.createElement("table",{className:null!=this.props.tableClass?this.props.tableClass:"",style:this.props.tableStyle},r.createElement("thead",{style:this.props.theadStyle},t),r.createElement("tbody",{style:this.props.tbodyStyle},e))},t.prototype.generateHeaders=function(){var e=this;if(0==this.props.cols.length)return null;var t=this.props.cols.map((function(t,n){var a;return null==(a=null!=t.headerStyle?t.headerStyle:{}).cursor&&(a.cursor="pointer"),r.createElement("th",{key:n,style:a,onClick:function(n){return e.handleSort({col:t.key,ascending:e.props.ascending},n)}},t.label,e.props.sortField==t.key?r.createElement(c,{ascending:e.props.ascending}):null)}));return r.createElement("tr",null,t)},t.prototype.generateRows=function(){var e=this;return 0==this.props.data.length?null:this.props.data.map((function(t,n){var a,l=e.props.cols.map((function(a){var l=o.clone(a.rowStyle);return r.createElement("td",{key:n.toString()+t[a.key]+a.key,style:l,onClick:e.handleClick.bind(e,{col:a.key,row:t,data:t[a.key]})},null!=a.content?a.content(t,a.key,l):t[a.key])}));return null==(a=null!=e.props.rowStyle?o.clone(e.props.rowStyle):{}).cursor&&(a.cursor="pointer"),e.props.selected(t)&&(a.backgroundColor="yellow"),r.createElement("tr",{style:a,key:n.toString()},l)}))},t.prototype.handleClick=function(e,t){this.props.onClick(e,t)},t.prototype.handleSort=function(e,t){this.props.onSort(e)},t}(r.Component);t.a=i},66:function(e,t,n){"use strict";function a(e){return $.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/SID",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(e),cache:!1,async:!0})}function r(e){return $.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/IsUser",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(e),cache:!1,async:!0})}function o(e){return $.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/FilledUserAccount",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(e),cache:!1,async:!0})}function l(){return $.ajax({type:"GET",url:homePath+"api/SystemCenter/Role",contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function c(e){return $.ajax({type:"GET",url:homePath+"api/"+e+"/ApplicationRole",contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function i(e,t){return $.ajax({type:"PATCH",url:homePath+"api/"+e+"/ApplicationRoleUserAccount/UpdateArray",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(t),cache:!0,async:!0})}function s(e,t){return $.ajax({type:"GET",url:homePath+"api/"+t+"/ApplicationRoleUserAccount/"+e,contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function u(){return $.ajax({type:"GET",url:homePath+"api/SystemCenter/TSC",contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function p(e,t){return"AccountName"==t||"Name"==t?null!=e.Name&&e.Name.length>0&&e.Name.length<=200:"Password"==t?null==e.Password||e.Password.length<=200:"FirstName"==t?null==e.FirstName||e.FirstName.length<=200:"LastName"==t?null==e.LastName||e.LastName.length<=200:"Phone"==t?null==e.Phone||e.Phone.length<=200:"Email"==t?null==e.Email||e.Email.length<=200:"Title"==t?null==e.Title||e.Title.length<=200:"MobilePhone"==t&&(null==e.MobilePhone||e.MobilePhone.length<=200)}function h(e,t){return $.ajax({type:"GET",url:homePath+"api/"+e+"/AccessLog/Aggregates/"+t,contentType:"application/json; charset=utf-8",dataType:"json",cache:!1,async:!0})}function d(e,t){return $.ajax({type:"GET",url:homePath+"api/"+e+"/AccessLog/Table/"+t,contentType:"application/json; charset=utf-8",dataType:"json",cache:!1,async:!0})}n.d(t,"f",(function(){return a})),n.d(t,"d",(function(){return r})),n.d(t,"c",(function(){return o})),n.d(t,"e",(function(){return l})),n.d(t,"g",(function(){return c})),n.d(t,"j",(function(){return i})),n.d(t,"h",(function(){return s})),n.d(t,"i",(function(){return u})),n.d(t,"k",(function(){return p})),n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return d}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,