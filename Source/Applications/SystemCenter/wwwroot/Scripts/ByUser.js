(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{128:function(e,t){},129:function(e,t){},139:function(e,t){},140:function(e,t){},160:function(e,t){},162:function(e,t){},163:function(e,t){},164:function(e,t){},165:function(e,t){},172:function(e,t){},175:function(e,t){},181:function(e,t){},184:function(e,t){},318:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n(45),o=n(31),l=n(3),c=n(37),i=n(92),s=n(41),u=n(66),p=n(93),d=n(62),m=n(38),h=n(122),y=n.n(h),f=n(35),b=function(){return(b=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},N=function(e,t,n,a){return new(n||(n=Promise))((function(r,o){function l(e){try{i(a.next(e))}catch(e){o(e)}}function c(e){try{i(a.throw(e))}catch(e){o(e)}}function i(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,c)}i((a=a.apply(e,t||[])).next())}))},E=function(e,t){var n,a,r,o,l={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function c(o){return function(c){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;l;)try{if(n=1,a&&(r=2&o[0]?a.return:o[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,o[1])).done)return r;switch(a=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return l.label++,{value:o[1],done:!1};case 5:l.label++,a=o[1],o=[0];continue;case 7:o=l.ops.pop(),l.trys.pop();continue;default:if(!(r=l.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){l=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){l.label=o[1];break}if(6===o[0]&&l.label<r[1]){l.label=r[1],r=o;break}if(r&&l.label<r[2]){l.label=r[2],l.ops.push(o);break}r[2]&&l.ops.pop(),l.trys.pop();continue}o=t.call(e,l)}catch(e){o=[6,e],a=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,c])}}},g=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var a,r,o=n.call(e),l=[];try{for(;(void 0===t||t-- >0)&&!(a=o.next()).done;)l.push(a.value)}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return l};t.default=function(e){var t=Object(l.useHistory)(),n=g(a.useState([]),2),h=n[0],S=n[1],v=g(a.useState("Idle"),2),k=v[0],w=v[1],F=g(a.useState([]),2),O=F[0],A=F[1],C=g(a.useState("FirstName"),2),P=C[0],j=C[1],T=g(a.useState(!0),2),L=T[0],R=T[1],D=g(a.useState(null),2),I=D[0],x=D[1],U=g(a.useState("Invalid"),2),_=U[0],V=U[1],M=g(a.useState([]),2),J=M[0],H=M[1],G=g(a.useState([]),2),Q=G[0],K=G[1];function W(){z().done((function(e){return x(e)}));var e=Object(u.e)();e.done((function(e){return H(e)}));var t=Object(u.i)();return t.done((function(e){return K(e)})),function(){null!=e.abort&&e.abort(),null!=t.abort&&t.abort()}}function z(){return $.ajax({type:"GET",url:homePath+"api/SystemCenter/UserAccount/New",contentType:"application/json; charset=utf-8",dataType:"json",cache:!1,async:!0})}return a.useEffect((function(){return W()}),[]),a.useEffect((function(){w("Loading");var e=$.ajax({type:"Post",url:homePath+"api/SystemCenter/UserAccount/SecureSearchableList",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify({Searches:h,OrderBy:P,Ascending:L}),cache:!1,async:!0});return e.done((function(e){A(e),w("Idle")})),e.fail((function(e){return w("Error")})),function(){null!=e&&null!=e.abort&&e.abort()}}),[h,L,P]),e.Roles.indexOf("Administrator")<0?null:a.createElement("div",{style:{width:"100%",height:"100%"}},a.createElement(m.SearchBar,{CollumnList:d.b.UserAccount,SetFilter:function(e){return S(e)},Direction:"left",defaultCollumn:d.a.UserAccount,Width:"50%",Label:"Search",ShowLoading:"Loading"==k,ResultNote:"Error"==k?"Could not complete Search":"Found "+O.length+" UserAccounts",GetEnum:function(e,t){return function(){}}},a.createElement("li",{className:"nav-item",style:{width:"15%",paddingRight:10}},a.createElement("fieldset",{className:"border",style:{padding:"10px",height:"100%"}},a.createElement("legend",{className:"w-auto",style:{fontSize:"large"}},"Actions:"),a.createElement("form",null,a.createElement("button",{className:"btn btn-primary","data-toggle":"modal","data-target":"#userAccountModal",hidden:e.Roles.indexOf("Administrator")<0,onClick:function(e){e.preventDefault()}},"Add User"))))),a.createElement("div",{style:{width:"100%",height:"calc( 100% - 136px)"}},a.createElement(r.a,{cols:[{key:"FirstName",label:"First Name",headerStyle:{width:"10%"},rowStyle:{width:"10%"}},{key:"LastName",label:"Last Name",headerStyle:{width:"10%"},rowStyle:{width:"10%"}},{key:"Role",label:"Role",headerStyle:{width:"20%"},rowStyle:{width:"20%"}},{key:"TSC",label:"TSC",headerStyle:{width:"10%"},rowStyle:{width:"10%"}},{key:"Phone",label:"Phone",headerStyle:{width:"10%"},rowStyle:{width:"10%"}},{key:"MobilePhone",label:"Mobile",headerStyle:{width:"10%"},rowStyle:{width:"10%"}},{key:"Email",label:"Email",headerStyle:{width:"auto"},rowStyle:{width:"auto"}},{key:null,label:"",headerStyle:{width:17,padding:0},rowStyle:{width:0,padding:0}}],tableClass:"table table-hover",data:O,sortField:P,ascending:L,onSort:function(e){e.col==P?R(!L):(R(!0),j(e.col))},onClick:function(e){t.push({pathname:homePath+"index.cshtml",search:"?name=User&UserAccountID="+e.row.ID,state:{}})},theadStyle:{fontSize:"smaller",display:"table",tableLayout:"fixed",width:"100%"},tbodyStyle:{display:"block",overflowY:"scroll",maxHeight:window.innerHeight-300,width:"100%"},rowStyle:{fontSize:"smaller",display:"table",tableLayout:"fixed",width:"100%"},selected:function(e){return!1}})),a.createElement("div",{className:"modal",id:"userAccountModal"},a.createElement("div",{className:"modal-dialog",style:{maxWidth:"100%",width:"75%"}},a.createElement("div",{className:"modal-content"},a.createElement("div",{className:"modal-header"},a.createElement("h4",{className:"modal-title"},"Add User"),a.createElement("button",{type:"button",className:"close","data-dismiss":"modal"},"×")),a.createElement("div",{className:"modal-body"},null!=I?a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement(c.a,{Record:I,Field:"Name",Feedback:"A Name of less than 200 characters is required.",Valid:function(e){return Object(u.k)(I,e)},Setter:function(e){I.UseADAuthentication&&function(e){N(this,void 0,void 0,(function(){var t,n,a,r;return E(this,(function(o){switch(o.label){case 0:return null==e||0==e.length?(V("Invalid"),z().done((function(t){t.Name=e,x(t)})),[2]):(V("Resolving"),[4,Object(u.f)(e)]);case 1:return t=o.sent(),e!==t&&e.countOccurrences("\\")<2?[4,Object(u.d)(t)]:[3,6];case 2:return n=o.sent(),V(n?"Valid":"Unknown"),n?((a=I).Name=t,[4,Object(u.c)(a)]):[3,4];case 3:return(r=o.sent()).Name=e,x(r),[3,5];case 4:z().done((function(t){t.Name=e,x(t)})),o.label=5;case 5:return[3,7];case 6:V("Invalid"),z().done((function(t){t.Name=e,x(t)})),o.label=7;case 7:return[2]}}))}))}(e.Name),x(e)}}),a.createElement("div",{className:"row",style:{position:"absolute",top:0,left:100},hidden:!I.UseADAuthentication},a.createElement("span",{id:"resolvingAccount",hidden:"Resolving"!=_},a.createElement("i",{style:{height:10,width:10,color:"grey"},className:"fa fa fa-spin fa-refresh"})," ",a.createElement("em",{className:"small"},"Resolving account details...")),a.createElement("span",{id:"accountValid",hidden:"Valid"!=_},a.createElement("i",{style:{height:20,width:20,color:"green"},className:"fa fa-check-circle"})," ",a.createElement("em",{className:"small"},"Resolved account name")),a.createElement("span",{id:"accountInvalid",hidden:"Invalid"!=_},a.createElement("i",{style:{height:20,width:20,color:"red"},className:"fa fa-times-circle"})," ",a.createElement("em",{className:"small"},"Cannot resolve account name")),a.createElement("span",{id:"accountUnknown",hidden:"Unknown"!=_},a.createElement("i",{style:{height:20,width:20,color:"orange"},className:"fa fa-exclamation-circle"})," ",a.createElement("em",{className:"small"},"Valid account name is not a user or Active Directory access is limited"))),a.createElement("div",{className:"card"},a.createElement("div",{className:"card-header"},a.createElement("div",{className:"row"},a.createElement("div",{className:"col-xs-4"},a.createElement("div",{className:"form-check-inline"},a.createElement("label",{className:"form-check-label"},a.createElement("input",{className:"form-check-input",type:"radio",checked:I.UseADAuthentication,onChange:function(e){var t=o.clone(I);t.UseADAuthentication=e.target.checked,x(t)}}),"Active Directory User"))),a.createElement("div",{className:"col-xs-4"},a.createElement("div",{className:"form-check-inline"},a.createElement("label",{className:"form-check-label"},a.createElement("input",{className:"form-check-input",type:"radio",checked:!I.UseADAuthentication,onChange:function(e){var t=o.clone(I);t.UseADAuthentication=!e.target.checked,x(t)}}),"Database User"))))),a.createElement("div",{className:"card-body",hidden:!I.UseADAuthentication},a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement(c.a,{Record:I,Field:"FirstName",Label:"First Name",Feedback:"First Name must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(c.a,{Record:I,Field:"LastName",Label:"Last Name",Feedback:"Last Name must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(c.a,{Record:I,Field:"Title",Feedback:"Title must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(p.a,{Record:I,Field:"RoleID",Label:"Role",Options:J.map((function(e){return{Value:e.ID.toString(),Label:e.Name}})),Setter:x,EmptyOption:!0})),a.createElement("div",{className:"col"},a.createElement(p.a,{Record:I,Field:"TSCID",Label:"TSC",Options:Q.map((function(e){return{Value:e.ID.toString(),Label:e.Name}})),Setter:x,EmptyOption:!0}),a.createElement(c.a,{Record:I,Field:"Phone",Feedback:"Phone must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(c.a,{Record:I,Field:"MobilePhone",Label:"Mobile Phone",Feedback:"Mobile Phone must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(c.a,{Record:I,Field:"Email",Feedback:"Email must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x})))),a.createElement("div",{className:"card-body",hidden:I.UseADAuthentication},a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement(f.Input,{Record:I,Field:"Password",Feedback:"Password must be less than 200 characters.",Type:"password",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(c.a,{Record:I,Field:"FirstName",Label:"First Name",Feedback:"First Name must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(c.a,{Record:I,Field:"LastName",Label:"Last Name",Feedback:"Last Name must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(c.a,{Record:I,Field:"Title",Feedback:"Title must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(p.a,{Record:I,Field:"RoleID",Label:"Role",Options:J.map((function(e){return{Value:e.ID.toString(),Label:e.Name}})),Setter:x,EmptyOption:!0})),a.createElement("div",{className:"col"},a.createElement(p.a,{Record:I,Field:"TSCID",Label:"TSC",Options:Q.map((function(e){return{Value:e.ID.toString(),Label:e.Name}})),Setter:x,EmptyOption:!0}),a.createElement(c.a,{Record:I,Field:"Phone",Feedback:"Password must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(c.a,{Record:I,Field:"MobilePhone",Label:"Mobile Phone",Feedback:"Mobile Phone must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(c.a,{Record:I,Field:"Email",Feedback:"Password must be less than 200 characters.",Valid:function(e){return Object(u.k)(I,e)},Setter:x}),a.createElement(i.a,{Record:I,Field:"ChangePasswordOn",Label:"Change Password On",Setter:x})))),a.createElement("div",{className:"row"},a.createElement("div",{className:"col"}),a.createElement("div",{className:"col-lg-2"},a.createElement(s.a,{Record:I,Label:"Locked Out",Field:"LockedOut",Setter:x}),a.createElement(s.a,{Record:I,Label:"Phone Confirmed",Field:"PhoneConfirmed",Setter:x}),a.createElement(s.a,{Record:I,Label:"Email Confirmed",Field:"EmailConfirmed",Setter:x}),a.createElement(s.a,{Record:I,Field:"Approved",Setter:x}),a.createElement(s.a,{Record:I,Field:"ReceiveNotifications",Label:"Receive Notifications",Setter:x})))))):null),a.createElement("div",{className:"modal-footer"},a.createElement("button",{type:"button",className:"btn btn-primary","data-dismiss":"modal",onClick:function(){$.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/Add",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(b(b({},I),{Password:y.a.SHA256(I.Password+"0").toString(y.a.enc.Base64)})),cache:!1,async:!0}).done((function(e){return W()}))}},"Save"),a.createElement("button",{type:"button",className:"btn btn-danger","data-dismiss":"modal",onClick:function(){return z().done((function(e){return x(e)}))}},"Close"))))))}},37:function(e,t,n){"use strict";var a,r=n(0),o=n(31),l=(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return r.createElement("div",{className:"form-group"},r.createElement("label",null,null==this.props.Label?this.props.Field:this.props.Label),r.createElement("input",{className:this.props.Valid(this.props.Field)?"form-control":"form-control is-invalid",onChange:function(t){var n=o.clone(e.props.Record);""!=t.target.value?n[e.props.Field]=t.target.value:n[e.props.Field]=null,e.props.Setter(n)},value:null==this.props.Record[this.props.Field]?"":this.props.Record[this.props.Field].toString(),disabled:null!=this.props.Disabled&&this.props.Disabled}),r.createElement("div",{className:"invalid-feedback"},null==this.props.Feedback?this.props.Field+" is a required field.":this.props.Feedback))},t}(r.Component);t.a=c},41:function(e,t,n){"use strict";var a,r=n(0),o=n(31),l=n.n(o),c=(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return c(t,e),t.prototype.render=function(){var e=this;return r.createElement("div",{className:"form-check"},r.createElement("input",{type:"checkbox",className:"form-check-input",style:{zIndex:1},onChange:function(t){var n=l.a.clone(e.props.Record);n[e.props.Field]=t.target.checked,e.props.Setter(n)},value:this.props.Record[this.props.Field]?"on":"off",checked:!!this.props.Record[this.props.Field],disabled:null!=this.props.Disabled&&this.props.Disabled}),r.createElement("label",{className:"form-check-label"},null==this.props.Label?this.props.Field:this.props.Label))},t}(r.Component);t.a=i},45:function(e,t,n){"use strict";var a,r=n(0),o=n(31),l=(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),c=function(e){return r.createElement("span",{style:{width:10,height:10,margin:3},className:"fa fa-angle-"+(e.ascending?"up":"down")})},i=function(e){function t(t){return e.call(this,t)||this}return l(t,e),t.prototype.componentDidUpdate=function(e,t){},t.prototype.render=function(){var e=this.generateRows(),t=this.generateHeaders();return r.createElement("table",{className:null!=this.props.tableClass?this.props.tableClass:"",style:this.props.tableStyle},r.createElement("thead",{style:this.props.theadStyle},t),r.createElement("tbody",{style:this.props.tbodyStyle},e))},t.prototype.generateHeaders=function(){var e=this;if(0==this.props.cols.length)return null;var t=this.props.cols.map((function(t,n){var a;return null==(a=null!=t.headerStyle?t.headerStyle:{}).cursor&&(a.cursor="pointer"),r.createElement("th",{key:n,style:a,onClick:function(n){return e.handleSort({col:t.key,ascending:e.props.ascending},n)}},t.label,e.props.sortField==t.key?r.createElement(c,{ascending:e.props.ascending}):null)}));return r.createElement("tr",null,t)},t.prototype.generateRows=function(){var e=this;return 0==this.props.data.length?null:this.props.data.map((function(t,n){var a,l=e.props.cols.map((function(a){var l=o.clone(a.rowStyle);return r.createElement("td",{key:n.toString()+t[a.key]+a.key,style:l,onClick:e.handleClick.bind(e,{col:a.key,row:t,data:t[a.key]})},null!=a.content?a.content(t,a.key,l):t[a.key])}));return null==(a=null!=e.props.rowStyle?o.clone(e.props.rowStyle):{}).cursor&&(a.cursor="pointer"),e.props.selected(t)&&(a.backgroundColor="yellow"),r.createElement("tr",{style:a,key:n.toString()},l)}))},t.prototype.handleClick=function(e,t){this.props.onClick(e,t)},t.prototype.handleSort=function(e,t){this.props.onSort(e)},t}(r.Component);t.a=i},62:function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return o}));var a,r,o,l=function(){return(l=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};!function(e){e.Customer=[{label:"Account Name",key:"CustomerKey",type:"string"},{label:"Name",key:"Name",type:"string"},{label:"Phone",key:"Phone",type:"string"},{label:"Description",key:"Description",type:"string"},{label:"PQView Site Name",key:"PQViewSite",type:"string"},{label:"Number of Assigned Meters",key:"Meters",type:"integer"}],e.Company=[{label:"Name",key:"Name",type:"string"},{label:"CompanyID",key:"CompanyID",type:"string"},{label:"Description",key:"Description",type:"string"},{label:"Company Type",key:"CompanyTypeID",type:"enum"}],e.UserAccount=[{label:"First Name",key:"UserAccount.FirstName",type:"string"},{label:"Last Name",key:"UserAccount.LastName",type:"string"},{label:"Phone",key:"UserAccount.Phone",type:"string"},{label:"Mobile Phone",key:"UserAccount.MobilePhone",type:"string"},{label:"Email",key:"UserAccount.Email",type:"string"},{label:"TSC",key:"UserAccount.TSC",type:"string"},{label:"Role",key:"Role.Name",type:"string"},{label:"Security Role",key:"ApplicationRole.Name",type:"string"}],e.Location=[{label:"Name",key:"Name",type:"string"},{label:"Key",key:"LocationKey",type:"string"},{label:"Asset",key:"Asset",type:"string"},{label:"Meter",key:"Meter",type:"string"},{label:"Number of Assets",key:"Assets",type:"integer"},{label:"Number of Meters",key:"Meters",type:"integer"}]}(a||(a={})),function(e){e.Company={label:"Name",key:"Name",type:"string"},e.Customer={label:"Account Name",key:"CustomerKey",type:"string"},e.UserAccount={label:"First Name",key:"UserAccount.FirstName",type:"string"},e.Location={label:"Name",key:"Name",type:"string"}}(r||(r={})),function(e){e.Company=function(e){return e.map((function(e){return-1==a.Company.findIndex((function(t){return t.key==e.FieldName}))?l(l({},e),{isPivotColumn:!0}):e}))},e.Customer=function(e){return e.map((function(e){if("PQViewSite"==e.FieldName){var t=e.SearchText;return 0==t.length&&(t="%"),t.replace("*","%"),t="'"+t+"'",{FieldName:"ID",SearchText:"(SELECT Customer.ID FROM PQViewSite LEFT JOIN [systemCenter.CustomerAccess] ON[systemCenter.CustomerAccess].PQViewSiteID = PQViewSite.ID LEFT JOIN Customer C ON C.ID = [systemCenter.CustomerAccess].CustomerID WHERE  PQViewSite.Name "+e.Operator+t+" )",Operator:"IN",Type:"number",isPivotColumn:!1}}return-1==a.Customer.findIndex((function(t){return t.key==e.FieldName}))?l(l({},e),{isPivotColumn:!0}):e}))},e.Location=function(e){return e.map((function(e){var t;return"Meter"==e.FieldName?(0==(t=e.SearchText).length&&(t="%"),t.replace("*","%"),t=" '"+t+"'",{FieldName:"ID",SearchText:"(SELECT Meter.LocationID FROM Meter WHERE  Meter.AssetKey "+e.Operator+t+" or Meter.Name "+e.Operator+t+" )",Operator:"IN",Type:"number",isPivotColumn:!1}):"Asset"==e.FieldName?(0==(t=e.SearchText).length&&(t="%"),t.replace("*","%"),t=" '"+t+"'",{FieldName:"ID",SearchText:"(SELECT AssetLocation.LocationID FROM Asset LEFT JOIN AssetLocation ON AssetLocation.AssetID = Asset.ID WHERE  Asset.AssetName "+e.Operator+t+" or Asset.AssetKey "+e.Operator+t+" )",Operator:"IN",Type:"number",isPivotColumn:!1}):-1==a.Location.findIndex((function(t){return t.key==e.FieldName}))?l(l({},e),{isPivotColumn:!0}):e}))}}(o||(o={}))},66:function(e,t,n){"use strict";function a(e){return $.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/SID",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(e),cache:!1,async:!0})}function r(e){return $.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/IsUser",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(e),cache:!1,async:!0})}function o(e){return $.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/FilledUserAccount",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(e),cache:!1,async:!0})}function l(){return $.ajax({type:"GET",url:homePath+"api/SystemCenter/Role",contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function c(e){return $.ajax({type:"GET",url:homePath+"api/"+e+"/ApplicationRole",contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function i(e,t){return $.ajax({type:"PATCH",url:homePath+"api/"+e+"/ApplicationRoleUserAccount/UpdateArray",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(t),cache:!0,async:!0})}function s(e,t){return $.ajax({type:"GET",url:homePath+"api/"+t+"/ApplicationRoleUserAccount/"+e,contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function u(){return $.ajax({type:"GET",url:homePath+"api/SystemCenter/TSC",contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function p(e,t){return"AccountName"==t||"Name"==t?null!=e.Name&&e.Name.length>0&&e.Name.length<=200:"Password"==t?null==e.Password||e.Password.length<=200:"FirstName"==t?null==e.FirstName||e.FirstName.length<=200:"LastName"==t?null==e.LastName||e.LastName.length<=200:"Phone"==t?null==e.Phone||e.Phone.length<=200:"Email"==t?null==e.Email||e.Email.length<=200:"Title"==t?null==e.Title||e.Title.length<=200:"MobilePhone"==t&&(null==e.MobilePhone||e.MobilePhone.length<=200)}function d(e,t){return $.ajax({type:"GET",url:homePath+"api/"+e+"/AccessLog/Aggregates/"+t,contentType:"application/json; charset=utf-8",dataType:"json",cache:!1,async:!0})}function m(e,t){return $.ajax({type:"GET",url:homePath+"api/"+e+"/AccessLog/Table/"+t,contentType:"application/json; charset=utf-8",dataType:"json",cache:!1,async:!0})}n.d(t,"f",(function(){return a})),n.d(t,"d",(function(){return r})),n.d(t,"c",(function(){return o})),n.d(t,"e",(function(){return l})),n.d(t,"g",(function(){return c})),n.d(t,"j",(function(){return i})),n.d(t,"h",(function(){return s})),n.d(t,"i",(function(){return u})),n.d(t,"k",(function(){return p})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}))},92:function(e,t,n){"use strict";var a,r=n(0),o=n(31),l=(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return r.createElement("div",{className:"form-group"},r.createElement("label",null,null==this.props.Label?this.props.Field:this.props.Label),r.createElement("input",{className:"form-control",type:"date",onChange:function(t){var n=o.clone(e.props.Record);""!=t.target.value?n[e.props.Field]=t.target.value:n[e.props.Field]=null,e.props.Setter(n)},value:null==this.props.Record[this.props.Field]?"":this.props.Record[this.props.Field].toString(),disabled:null!=this.props.Disabled&&this.props.Disabled}))},t}(r.Component);t.a=c},93:function(e,t,n){"use strict";var a,r=n(0),o=n(31),l=(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return r.createElement("div",{className:"form-group"},r.createElement("label",null,null==this.props.Label?this.props.Field:this.props.Label),r.createElement("select",{className:"form-control",onChange:function(t){var n=o.clone(e.props.Record);""!=t.target.value?n[e.props.Field]=t.target.value:n[e.props.Field]=null,e.props.Setter(n)},value:null==this.props.Record[this.props.Field]?"":this.props.Record[this.props.Field].toString(),disabled:null!=this.props.Disabled&&this.props.Disabled},this.props.EmptyOption?r.createElement("option",{value:""}):null,this.props.Options.map((function(e,t){return r.createElement("option",{key:t,value:e.Value},e.Label)}))))},t}(r.Component);t.a=c}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,