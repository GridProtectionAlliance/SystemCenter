(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["ByAssetGroup"],{

/***/ "./TSX/SystemCenter/AssetGroups/ByAssetGroup.tsx":
/*!*******************************************************!*\
  !*** ./TSX/SystemCenter/AssetGroups/ByAssetGroup.tsx ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _gpa_gemstone_react_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @gpa-gemstone/react-table */ "../../node_modules/@gpa-gemstone/react-table/lib/index.js");
/* harmony import */ var _gpa_gemstone_react_table__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_gpa_gemstone_react_table__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "../../node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ "react-router-dom");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_router_dom__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _AddToGroup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AddToGroup */ "./TSX/SystemCenter/AssetGroups/AddToGroup.tsx");
/* harmony import */ var _gpa_gemstone_react_interactive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @gpa-gemstone/react-interactive */ "../../node_modules/@gpa-gemstone/react-interactive/lib/index.js");
/* harmony import */ var _gpa_gemstone_react_interactive__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_gpa_gemstone_react_interactive__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _gpa_gemstone_react_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @gpa-gemstone/react-forms */ "../../node_modules/@gpa-gemstone/react-forms/lib/index.js");
/* harmony import */ var _gpa_gemstone_react_forms__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_gpa_gemstone_react_forms__WEBPACK_IMPORTED_MODULE_6__);
//******************************************************************************************************
//  ByAsset.tsx - Gbtc
//
//  Copyright Â© 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  10/14/2020 - C. Lackner
//       Generated original version of source code.
//
//******************************************************************************************************
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (undefined && undefined.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};







var defaultSearchcols = [
    { label: 'Name', key: 'Name', type: 'string' },
    { label: 'Number of Meter', key: 'Meters', type: 'integer' },
    { label: 'Number of Transmission Assets', key: 'Assets', type: 'integer' },
    { label: 'Number of Users', key: 'Users', type: 'integer' },
    { label: 'Show in PQ Dashboard', key: 'DisplayDashboard', type: 'boolean' },
];
var emptyAssetGroup = { ID: -1, Name: '', DisplayDashboard: true, AssetGroups: 0, Meters: 0, Assets: 0, Users: 0, MeterList: [], AssetList: [], UserList: [], AssetGroupList: [] };
var ByAssetGroup = function (props) {
    var history = Object(react_router_dom__WEBPACK_IMPORTED_MODULE_3__["useHistory"])();
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"]([]), 2), search = _a[0], setSearch = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"]([]), 2), data = _b[0], setData = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"]('Name'), 2), sortField = _c[0], setSortField = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"](true), 2), ascending = _d[0], setAscending = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"](defaultSearchcols), 2), filterableList = _e[0], setFilterableList = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"]('Idle'), 2), searchState = _f[0], setSearchState = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"](lodash__WEBPACK_IMPORTED_MODULE_2__["cloneDeep"](emptyAssetGroup)), 2), newAssetGroup = _g[0], setNewAssetGroup = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"]([]), 2), allAssetGroups = _h[0], setAllAssetGroups = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"](false), 2), showNewGroup = _j[0], setShowNewGroup = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"](false), 2), showAddAsset = _k[0], setShowAddAsset = _k[1];
    var _l = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"](false), 2), showAddMeter = _l[0], setShowAddMeter = _l[1];
    var _m = __read(react__WEBPACK_IMPORTED_MODULE_0__["useState"](false), 2), showAddGroup = _m[0], setShowAddGroup = _m[1];
    react__WEBPACK_IMPORTED_MODULE_0__["useEffect"](function () {
        var handle2 = getAllAssetGroups();
        handle2.done(function (aas) { return setAllAssetGroups(aas); });
        return function cleanup() {
            if (handle2.abort != null)
                handle2.abort();
        };
    }, []);
    react__WEBPACK_IMPORTED_MODULE_0__["useEffect"](function () {
        var handle = getAssetGroups();
        handle.done(function (data) {
            setSearchState('Idle');
            setData(JSON.parse(data));
        }).fail(function (d) { return setSearchState('Error'); });
        return function () {
            if (handle.abort != null)
                handle.abort();
        };
    }, [search, ascending, sortField]);
    function getAssetGroups() {
        setSearchState('Loading');
        var searches = search.map(function (s) { if (defaultSearchcols.findIndex(function (item) { return item.key == s.FieldName; }) == -1)
            return __assign(__assign({}, s), { isPivotColumn: true });
        else
            return s; });
        return $.ajax({
            type: "Post",
            url: homePath + "api/OpenXDA/AssetGroup/SearchableList",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: JSON.stringify({ Searches: searches, OrderBy: sortField, Ascending: ascending }),
            cache: false,
            async: true
        });
    }
    function getAllAssetGroups() {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/AssetGroup",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            async: true
        });
    }
    function addNewAssetGroup() {
        $.ajax({
            type: "POST",
            url: homePath + "api/OpenXDA/Assetgroup/Add",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: JSON.stringify(newAssetGroup),
            cache: false,
            async: true
        }).done(function (newAssetGroup) {
            sessionStorage.clear();
            history.push({ pathname: homePath + 'index.cshtml', search: '?name=AssetGroup&AssetGroupID=' + newAssetGroup.ID, state: {} });
        }).fail(function (msg) {
            if (msg.status == 500)
                alert(msg.responseJSON.ExceptionMessage);
        });
    }
    function handleSelect(item) {
        history.push({ pathname: homePath + 'index.cshtml', search: '?name=AssetGroup&AssetGroupID=' + item.row.ID, state: {} });
    }
    function valid(field) {
        if (field == 'Name') {
            if (newAssetGroup.Name == null || newAssetGroup.Name.length == 0)
                return false;
            return allAssetGroups.map(function (item) { return item.Name.toLowerCase(); }).indexOf(newAssetGroup.Name.toLowerCase()) < 0;
        }
        return true;
    }
    var standardSearch = { label: 'Name', key: 'Name', type: 'string' };
    return (react__WEBPACK_IMPORTED_MODULE_0__["createElement"](react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null,
        react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("div", { style: { width: '100%', height: '100%' } },
            react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_gpa_gemstone_react_interactive__WEBPACK_IMPORTED_MODULE_5__["SearchBar"], { CollumnList: filterableList, SetFilter: function (flds) { return setSearch(flds); }, Direction: 'left', defaultCollumn: standardSearch, Width: '50%', Label: 'Search', ShowLoading: searchState == 'Loading', ResultNote: searchState == 'Error' ? 'Could not complete Search' : 'Found ' + data.length + ' Locations', GetEnum: function (setOptions, field) {
                    var handle = null;
                    if (field.type != 'enum' || field.enum == undefined || field.enum.length != 1)
                        return function () { };
                    handle = $.ajax({
                        type: "GET",
                        url: homePath + "api/ValueList/Group/" + field.enum[0].Value,
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        cache: true,
                        async: true
                    });
                    handle.done(function (d) { return setOptions(d.map(function (item) { return ({ Value: item.Value.toString(), Label: item.Text }); })); });
                    return function () { if (handle != null && handle.abort == null)
                        handle.abort(); };
                } },
                react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("li", { className: "nav-item", style: { width: '15%', paddingRight: 10 } },
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("fieldset", { className: "border", style: { padding: '10px', height: '100%' } },
                        react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("legend", { className: "w-auto", style: { fontSize: 'large' } }, "Actions:"),
                        react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("form", null,
                            react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("div", { className: "form-group" },
                                react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("button", { className: "btn btn-primary", hidden: props.Roles.indexOf('Administrator') < 0 && props.Roles.indexOf('Transmission SME') < 0, onClick: function (event) { setShowNewGroup(true); } }, "Add New AssetGroup")))))),
            react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("div", { style: { width: '100%', height: 'calc( 100% - 180px)' } },
                react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_gpa_gemstone_react_table__WEBPACK_IMPORTED_MODULE_1___default.a, { cols: [
                        { key: 'Name', label: 'Name', headerStyle: { width: 'auto' }, rowStyle: { width: 'auto' } },
                        { key: 'Assets', label: 'Num. of Assets', headerStyle: { width: 'auto' }, rowStyle: { width: 'auto' } },
                        { key: 'Meters', label: 'Num. of Meters', headerStyle: { width: 'auto' }, rowStyle: { width: 'auto' } },
                        { key: 'Users', label: 'Num. of Users', headerStyle: { width: 'auto' }, rowStyle: { width: 'auto' } },
                        { key: 'AssetGroups', label: 'Num. of Asset Groups', headerStyle: { width: 'auto' }, rowStyle: { width: 'auto' } },
                        { key: null, label: '', headerStyle: { width: 17, padding: 0 }, rowStyle: { width: 0, padding: 0 } },
                    ], tableClass: "table table-hover", data: data, sortField: sortField, ascending: ascending, onSort: function (d) {
                        if (d.col == sortField)
                            setAscending(!ascending);
                        else {
                            setAscending(true);
                            setSortField(d.col);
                        }
                    }, onClick: handleSelect, theadStyle: { fontSize: 'smaller', display: 'table', tableLayout: 'fixed', width: '100%' }, tbodyStyle: { display: 'block', overflowY: 'scroll', maxHeight: window.innerHeight - 300, width: '100%' }, rowStyle: { fontSize: 'smaller', display: 'table', tableLayout: 'fixed', width: '100%' }, selected: function (item) { return false; } }))),
        react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_gpa_gemstone_react_interactive__WEBPACK_IMPORTED_MODULE_5__["Modal"], { Size: 'xlg', Show: showNewGroup, Title: 'Create a New AssetGroup', ShowX: true, CancelText: 'Close', CancelBtnClass: 'btn-danger', ConfirmBtnClass: 'btn-success', ConfirmText: 'Add', CallBack: function (conf) { if (conf)
                addNewAssetGroup();
            else
                setNewAssetGroup(lodash__WEBPACK_IMPORTED_MODULE_2__["cloneDeep"](emptyAssetGroup)); setShowNewGroup(false); } },
            react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("div", { className: "row" },
                react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("div", { className: "col" },
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_gpa_gemstone_react_forms__WEBPACK_IMPORTED_MODULE_6__["Input"], { Record: newAssetGroup, Field: 'Name', Label: 'Name', Feedback: 'A unique name of less than 50 characters is required.', Valid: valid, Setter: setNewAssetGroup, Disabled: false }),
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_gpa_gemstone_react_forms__WEBPACK_IMPORTED_MODULE_6__["CheckBox"], { Record: newAssetGroup, Field: 'DisplayDashboard', Label: 'Show Asset Group in Dashboard', Setter: setNewAssetGroup, Disabled: false })),
                react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("div", { className: "col" },
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_gpa_gemstone_react_forms__WEBPACK_IMPORTED_MODULE_6__["Input"], { Record: newAssetGroup, Field: 'Assets', Label: 'Num. of Transmission Assets', Valid: function () { return true; }, Setter: setNewAssetGroup, Disabled: true }),
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("button", { type: "button", className: "btn btn-primary btn-block", onClick: function () { return setShowAddAsset(true); } }, " Add Transmission Asset "),
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_gpa_gemstone_react_forms__WEBPACK_IMPORTED_MODULE_6__["Input"], { Record: newAssetGroup, Field: 'Meters', Label: 'Num. of Meters', Valid: function () { return true; }, Setter: setNewAssetGroup, Disabled: true }),
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("button", { type: "button", className: "btn btn-primary btn-block", onClick: function () { return setShowAddMeter(true); } }, " Add Meter "),
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_gpa_gemstone_react_forms__WEBPACK_IMPORTED_MODULE_6__["Input"], { Record: newAssetGroup, Field: 'Users', Label: 'Num. of Users', Valid: function () { return true; }, Setter: setNewAssetGroup, Disabled: true }),
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("button", { type: "button", className: "btn btn-primary btn-block", disabled: true }, " Add User Account "),
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_gpa_gemstone_react_forms__WEBPACK_IMPORTED_MODULE_6__["Input"], { Record: newAssetGroup, Field: 'AssetGroups', Label: 'Num. of Asset Groups', Valid: function () { return true; }, Setter: setNewAssetGroup, Disabled: true }),
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"]("button", { type: "button", className: "btn btn-primary btn-block", onClick: function () { return setShowAddGroup(true); } }, " Add Asset Group ")))),
        react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_AddToGroup__WEBPACK_IMPORTED_MODULE_4__["default"], { type: 'Asset', onComplete: function (list) {
                setNewAssetGroup(function (grp) {
                    var _a;
                    var updated = lodash__WEBPACK_IMPORTED_MODULE_2__["cloneDeep"](grp);
                    (_a = updated.AssetList).push.apply(_a, __spread(list));
                    updated.AssetList = lodash__WEBPACK_IMPORTED_MODULE_2__["uniq"](updated.AssetList);
                    updated.Assets = updated.AssetList.length;
                    return updated;
                });
                return null;
            }, Show: showAddAsset, Close: function () { return setShowAddAsset(false); } }),
        react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_AddToGroup__WEBPACK_IMPORTED_MODULE_4__["default"], { type: 'Meter', onComplete: function (list) {
                setNewAssetGroup(function (grp) {
                    var _a;
                    var updated = lodash__WEBPACK_IMPORTED_MODULE_2__["cloneDeep"](grp);
                    (_a = updated.MeterList).push.apply(_a, __spread(list));
                    updated.MeterList = lodash__WEBPACK_IMPORTED_MODULE_2__["uniq"](updated.MeterList);
                    updated.Meters = updated.MeterList.length;
                    return updated;
                });
                return null;
            }, Show: showAddMeter, Close: function () { return setShowAddMeter(false); } }),
        react__WEBPACK_IMPORTED_MODULE_0__["createElement"](_AddToGroup__WEBPACK_IMPORTED_MODULE_4__["default"], { type: 'Group', onComplete: function (list) {
                setNewAssetGroup(function (grp) {
                    var _a;
                    var updated = lodash__WEBPACK_IMPORTED_MODULE_2__["cloneDeep"](grp);
                    (_a = updated.AssetGroupList).push.apply(_a, __spread(list));
                    updated.AssetGroupList = lodash__WEBPACK_IMPORTED_MODULE_2__["uniq"](updated.AssetGroupList);
                    updated.AssetGroups = updated.AssetGroupList.length;
                    return updated;
                });
                return null;
            }, Show: showAddGroup, Close: function () { return setShowAddGroup(false); } })));
};
/* harmony default export */ __webpack_exports__["default"] = (ByAssetGroup);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,