(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{128:function(e,t){},129:function(e,t){},139:function(e,t){},140:function(e,t){},160:function(e,t){},162:function(e,t){},163:function(e,t){},164:function(e,t){},165:function(e,t){},172:function(e,t){},175:function(e,t){},181:function(e,t){},184:function(e,t){},330:function(e,t,n){"use strict";n.r(t);var r,a=n(0),s=n(31),o=n(37),i=n(41),c=n(92),l=n(66),u=n(93),p=n(122),d=n.n(p),h=n(35),m=(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),f=function(){return(f=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},b=function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{c(r.next(e))}catch(e){s(e)}}function i(e){try{c(r.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}c((r=r.apply(e,t||[])).next())}))},y=function(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}},U=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.state={User:r.props.User,UserValidation:"Invalid",Roles:[],TSCs:[],changedPassword:!1},r}return m(t,e),t.prototype.componentDidMount=function(){var e=this;Object(l.e)().done((function(t){return e.setState({Roles:t})})),Object(l.i)().done((function(t){return e.setState({TSCs:t})})),this.state.User.UseADAuthentication&&this.validateUser(this.state.User.AccountName)},t.prototype.componentWillReceiveProps=function(e){this.setState({User:e.User,changedPassword:!1})},t.prototype.updateUser=function(){var e=this,t=s.clone(this.state.User),n=this.state.changedPassword?d.a.SHA256(this.state.User.Password+"0").toString(d.a.enc.Base64):this.state.User.Password;return $.ajax({type:"PATCH",url:homePath+"api/SystemCenter/UserAccount/Update",contentType:"application/json; charset=utf-8",data:JSON.stringify(f(f({},this.state.User),{Password:n})),dataType:"json",cache:!0,async:!0}).done((function(n){e.props.stateSetter(t)}))},t.prototype.validateUser=function(e){return b(this,void 0,void 0,(function(){var t,n;return y(this,(function(r){switch(r.label){case 0:return null==e||0==e.length?(this.setState({UserValidation:"Invalid"}),[2]):(this.setState({UserValidation:"Resolving"}),[4,Object(l.f)(e)]);case 1:return t=r.sent(),e!==t&&e.countOccurrences("\\")<2?[4,Object(l.d)(t)]:[3,3];case 2:return n=r.sent(),this.setState({UserValidation:n?"Valid":"Unknown"}),[3,4];case 3:this.setState({UserValidation:"Invalid"}),r.label=4;case 4:return[2]}}))}))},t.prototype.render=function(){var e=this;return a.createElement("div",{className:"card",style:{marginBottom:10}},a.createElement("div",{className:"card-header"},a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement("h4",null,"User Information:")))),a.createElement("div",{className:"card-body"},a.createElement("div",{className:"row",style:{height:window.innerHeight-540,maxHeight:window.innerHeight-540,overflowY:"auto"}},a.createElement("div",{className:"col"},a.createElement(o.a,{Record:this.state.User,Field:"AccountName",Label:"Name",Feedback:"A Name of less than 200 characters is required.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){e.state.User.UseADAuthentication&&e.validateUser(t.Name),t.Name=t.AccountName,e.setState({User:t})}}),a.createElement("div",{className:"row",style:{position:"absolute",top:0,left:100},hidden:!this.state.User.UseADAuthentication},a.createElement("span",{id:"resolvingAccount",hidden:"Resolving"!=this.state.UserValidation},a.createElement("i",{style:{height:10,width:10,color:"grey"},className:"fa fa fa-spin fa-refresh"})," ",a.createElement("em",{className:"small"},"Resolving account details...")),a.createElement("span",{id:"accountValid",hidden:"Valid"!=this.state.UserValidation},a.createElement("i",{style:{height:20,width:20,color:"green"},className:"fa fa-check-circle"})," ",a.createElement("em",{className:"small"},"Resolved account name")),a.createElement("span",{id:"accountInvalid",hidden:"Invalid"!=this.state.UserValidation},a.createElement("i",{style:{height:20,width:20,color:"red"},className:"fa fa-times-circle"})," ",a.createElement("em",{className:"small"},"Cannot resolve account name")),a.createElement("span",{id:"accountUnknown",hidden:"Unknown"!=this.state.UserValidation},a.createElement("i",{style:{height:20,width:20,color:"orange"},className:"fa fa-exclamation-circle"})," ",a.createElement("em",{className:"small"},"Valid account name is not a user or Active Directory access is limited"))),a.createElement("div",{className:"card"},a.createElement("div",{className:"card-header"},a.createElement("div",{className:"row"},a.createElement("div",{className:"col-xs-4"},a.createElement("div",{className:"form-check-inline"},a.createElement("label",{className:"form-check-label"},a.createElement("input",{className:"form-check-input",type:"radio",checked:this.state.User.UseADAuthentication,onChange:function(t){var n=s.clone(e.state.User);n.UseADAuthentication=t.target.checked,e.setState({User:n})}}),"Active Directory User"))),a.createElement("div",{className:"col-xs-4"},a.createElement("div",{className:"form-check-inline"},a.createElement("label",{className:"form-check-label"},a.createElement("input",{className:"form-check-input",type:"radio",checked:!this.state.User.UseADAuthentication,onChange:function(t){var n=s.clone(e.state.User);n.UseADAuthentication=!t.target.checked,e.setState({User:n})}}),"Database User"))))),a.createElement("div",{className:"card-body",hidden:!this.state.User.UseADAuthentication},a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement(o.a,{Record:this.state.User,Field:"FirstName",Label:"First Name",Feedback:"First Name must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(o.a,{Record:this.state.User,Field:"LastName",Label:"Last Name",Feedback:"Last Name must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(o.a,{Record:this.state.User,Field:"Title",Feedback:"Title must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(u.a,{Record:this.state.User,Field:"RoleID",Label:"Role",Options:this.state.Roles.map((function(e){return{Value:e.ID.toString(),Label:e.Name}})),Setter:function(t){return e.setState({User:t})},EmptyOption:!0})),a.createElement("div",{className:"col"},a.createElement(u.a,{Record:this.state.User,Field:"TSCID",Label:"TSC",Options:this.state.TSCs.map((function(e){return{Value:e.ID.toString(),Label:e.Name}})),Setter:function(t){return e.setState({User:t})},EmptyOption:!0}),a.createElement(o.a,{Record:this.state.User,Field:"Phone",Feedback:"Password must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(o.a,{Record:this.state.User,Field:"MobilePhone",Label:"Mobile Phone",Feedback:"Mobile Phone must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(o.a,{Record:this.state.User,Field:"Email",Feedback:"Password must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}})))),a.createElement("div",{className:"card-body",hidden:this.state.User.UseADAuthentication},a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement(h.Input,{Record:this.state.User,Field:"Password",Type:"password",Feedback:"Password must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t,changedPassword:!0})}}),a.createElement(o.a,{Record:this.state.User,Field:"FirstName",Label:"First Name",Feedback:"First Name must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(o.a,{Record:this.state.User,Field:"LastName",Label:"Last Name",Feedback:"Last Name must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(o.a,{Record:this.state.User,Field:"Title",Feedback:"Title must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(u.a,{Record:this.state.User,Field:"RoleID",Label:"Role",Options:this.state.Roles.map((function(e){return{Value:e.ID.toString(),Label:e.Name}})),Setter:function(t){return e.setState({User:t})},EmptyOption:!0})),a.createElement("div",{className:"col"},a.createElement(u.a,{Record:this.state.User,Field:"TSCID",Label:"TSC",Options:this.state.TSCs.map((function(e){return{Value:e.ID.toString(),Label:e.Name}})),Setter:function(t){return e.setState({User:t})},EmptyOption:!0}),a.createElement(o.a,{Record:this.state.User,Field:"Phone",Feedback:"Password must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(o.a,{Record:this.state.User,Field:"MobilePhone",Label:"Mobile Phone",Feedback:"Mobile Phone must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(o.a,{Record:this.state.User,Field:"Email",Feedback:"Password must be less than 200 characters.",Valid:function(t){return Object(l.k)(e.state.User,t)},Setter:function(t){return e.setState({User:t})}}),a.createElement(c.a,{Record:this.state.User,Field:"ChangePasswordOn",Label:"Change Password On",Setter:function(t){return e.setState({User:t})}})))),a.createElement("div",{className:"row"},a.createElement("div",{className:"col"}),a.createElement("div",{className:"col-lg-2"},a.createElement(i.a,{Record:this.state.User,Label:"Locked Out",Field:"LockedOut",Setter:function(t){return e.setState({User:t})}}),a.createElement(i.a,{Record:this.state.User,Label:"Phone Confirmed",Field:"PhoneConfirmed",Setter:function(t){return e.setState({User:t})}}),a.createElement(i.a,{Record:this.state.User,Label:"Email Confirmed",Field:"EmailConfirmed",Setter:function(t){return e.setState({User:t})}}),a.createElement(i.a,{Record:this.state.User,Field:"Approved",Setter:function(t){return e.setState({User:t})}}),a.createElement(i.a,{Record:this.state.User,Field:"ReceiveNotifications",Label:"Receive Notifications",Setter:function(t){return e.setState({User:t})}}))))))),a.createElement("div",{className:"card-footer"},a.createElement("div",{className:"btn-group mr-2"},a.createElement("button",{className:"btn btn-primary",onClick:function(){return e.updateUser()},disabled:this.state.User==this.props.User},"Update")),a.createElement("div",{className:"btn-group mr-2"},a.createElement("button",{className:"btn btn-default",onClick:function(){return e.setState({User:e.props.User})},disabled:this.state.User==this.props.User},"Reset"))))},t}(a.Component),v=function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{c(r.next(e))}catch(e){s(e)}}function i(e){try{c(r.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}c((r=r.apply(e,t||[])).next())}))},E=function(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}},N=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,s=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=s.return)&&n.call(s)}finally{if(a)throw a.error}}return o};function g(e){var t=N(a.useState([]),2),n=t[0],r=t[1],o=N(a.useState([]),2),c=o[0],u=o[1],p=N(a.useState(!1),2),d=p[0],h=p[1];function m(){return v(this,void 0,void 0,(function(){var t,n,a,s;return E(this,(function(o){switch(o.label){case 0:return h(!1),[4,Object(l.g)("SystemCenter")];case 1:return t=o.sent(),[4,Object(l.g)("OpenXDA")];case 2:return n=o.sent(),[4,Object(l.h)(e.User.ID,"SystemCenter")];case 3:return a=o.sent(),[4,Object(l.h)(e.User.ID,"OpenXDA")];case 4:return s=o.sent(),r(t.map((function(e){return e.Assigned=null!=a.find((function(t){return t.ApplicationRoleID==e.ID})),e}))),u(n.map((function(e){return e.Assigned=null!=s.find((function(t){return t.ApplicationRoleID==e.ID})),e}))),[2]}}))}))}return a.useEffect((function(){m()}),[]),a.createElement("div",{className:"card",style:{marginBottom:10}},a.createElement("div",{className:"card-header"},a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement("h4",null,"User Permissions:")))),a.createElement("div",{className:"card-body"},a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement("fieldset",{className:"border",style:{padding:"10px",height:"100%"}},a.createElement("legend",{className:"w-auto",style:{fontSize:"large"}},"System Center:"),a.createElement("form",null,n.map((function(e,t,n){return a.createElement(i.a,{key:e.ID,Record:e,Field:"Assigned",Label:e.Name,Setter:function(t){e.Assigned=t.Assigned;var a=s.clone(n);r(a),h(!0)}})}))))),a.createElement("div",{className:"col"},a.createElement("fieldset",{className:"border",style:{padding:"10px",height:"100%"}},a.createElement("legend",{className:"w-auto",style:{fontSize:"large"}},"OpenXDA:"),a.createElement("form",null,c.map((function(e,t,n){return a.createElement(i.a,{key:e.ID,Record:e,Field:"Assigned",Label:e.Name,Setter:function(t){e.Assigned=t.Assigned;var r=s.clone(n);u(r),h(!0)}})}))))))),a.createElement("div",{className:"card-footer"},a.createElement("div",{className:"btn-group mr-2"},a.createElement("button",{className:"btn btn-primary",onClick:function(){return function(){return v(this,void 0,void 0,(function(){return E(this,(function(t){switch(t.label){case 0:return[4,Object(l.j)("SystemCenter",n.filter((function(e){return e.Assigned})).map((function(t){return{ID:"00000000-0000-0000-0000-000000000000",ApplicationRoleID:t.ID,UserAccountID:e.User.ID}})))];case 1:return t.sent(),[4,Object(l.j)("OpenXDA",c.filter((function(e){return e.Assigned})).map((function(t){return{ID:"00000000-0000-0000-0000-000000000000",ApplicationRoleID:t.ID,UserAccountID:e.User.ID}})))];case 2:return t.sent(),m(),[2]}}))}))}()},disabled:!d},"Update")),a.createElement("div",{className:"btn-group mr-2"},a.createElement("button",{className:"btn btn-default",onClick:function(){return m()},disabled:!d},"Reset"))))}var S=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),w=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.state={User:null,Tab:r.getTab()},r}return S(t,e),t.prototype.getTab=function(){return sessionStorage.hasOwnProperty("User.Tab")?JSON.parse(sessionStorage.getItem("User.Tab")):"userInfo"},t.prototype.getUser=function(){var e=this;null!=this.props.UserID&&$.ajax({type:"GET",url:homePath+"api/SystemCenter/UserAccount/One/"+this.props.UserID,contentType:"application/json; charset=utf-8",dataType:"json",cache:!1,async:!0}).done((function(t){return e.setState({User:t})}))},t.prototype.deleteUser=function(){return $.ajax({type:"DELETE",url:homePath+"api/SystemCenter/UserAccount/Delete",contentType:"application/json; charset=utf-8",data:JSON.stringify(this.state.User),dataType:"json",cache:!0,async:!0})},t.prototype.setTab=function(e){sessionStorage.setItem("User.Tab",JSON.stringify(e)),this.setState({Tab:e})},t.prototype.componentDidMount=function(){this.getUser()},t.prototype.componentWillUnmount=function(){},t.prototype.render=function(){var e=this;return null==this.state.User?null:a.createElement("div",{style:{width:"100%",height:window.innerHeight-63,maxHeight:window.innerHeight-63,overflow:"hidden",padding:15}},a.createElement("div",{className:"row"},a.createElement("div",{className:"col"},a.createElement("h2",null,null!=this.state.User?this.state.User.FirstName+" "+this.state.User.LastName:"")),a.createElement("div",{className:"col"},a.createElement("button",{className:"btn btn-danger pull-right",hidden:null==this.state.User,onClick:function(){return e.deleteUser().done((function(){return window.location.href=homePath+"index.cshtml?name=Users"}))}},"Delete User (Permanent)"))),a.createElement("hr",null),a.createElement("ul",{className:"nav nav-tabs"},a.createElement("li",{className:"nav-item"},a.createElement("a",{className:"nav-link"+("userInfo"==this.state.Tab?" active":""),onClick:function(){return e.setTab("userInfo")},"data-toggle":"tab",href:"#userInfo"},"User Info")),a.createElement("li",{className:"nav-item"},a.createElement("a",{className:"nav-link"+("permissions"==this.state.Tab?" active":""),onClick:function(){return e.setTab("permissions")},"data-toggle":"tab"},"Permissions"))),a.createElement("div",{className:"tab-content",style:{maxHeight:window.innerHeight-235,overflow:"hidden"}},a.createElement("div",{className:"tab-pane "+("userInfo"==this.state.Tab?" active":"fade"),id:"userInfo"},a.createElement(U,{User:this.state.User,stateSetter:function(t){return e.setState({User:t})}})),a.createElement("div",{className:"tab-pane "+("permissions"==this.state.Tab?" active":"fade"),id:"permissions"},a.createElement(g,{User:this.state.User}))))},t}(a.Component);t.default=w},37:function(e,t,n){"use strict";var r,a=n(0),s=n(31),o=(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=this;return a.createElement("div",{className:"form-group"},a.createElement("label",null,null==this.props.Label?this.props.Field:this.props.Label),a.createElement("input",{className:this.props.Valid(this.props.Field)?"form-control":"form-control is-invalid",onChange:function(t){var n=s.clone(e.props.Record);""!=t.target.value?n[e.props.Field]=t.target.value:n[e.props.Field]=null,e.props.Setter(n)},value:null==this.props.Record[this.props.Field]?"":this.props.Record[this.props.Field].toString(),disabled:null!=this.props.Disabled&&this.props.Disabled}),a.createElement("div",{className:"invalid-feedback"},null==this.props.Feedback?this.props.Field+" is a required field.":this.props.Feedback))},t}(a.Component);t.a=i},41:function(e,t,n){"use strict";var r,a=n(0),s=n(31),o=n.n(s),i=(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.render=function(){var e=this;return a.createElement("div",{className:"form-check"},a.createElement("input",{type:"checkbox",className:"form-check-input",style:{zIndex:1},onChange:function(t){var n=o.a.clone(e.props.Record);n[e.props.Field]=t.target.checked,e.props.Setter(n)},value:this.props.Record[this.props.Field]?"on":"off",checked:!!this.props.Record[this.props.Field],disabled:null!=this.props.Disabled&&this.props.Disabled}),a.createElement("label",{className:"form-check-label"},null==this.props.Label?this.props.Field:this.props.Label))},t}(a.Component);t.a=c},66:function(e,t,n){"use strict";function r(e){return $.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/SID",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(e),cache:!1,async:!0})}function a(e){return $.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/IsUser",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(e),cache:!1,async:!0})}function s(e){return $.ajax({type:"POST",url:homePath+"api/SystemCenter/UserAccount/FilledUserAccount",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(e),cache:!1,async:!0})}function o(){return $.ajax({type:"GET",url:homePath+"api/SystemCenter/Role",contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function i(e){return $.ajax({type:"GET",url:homePath+"api/"+e+"/ApplicationRole",contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function c(e,t){return $.ajax({type:"PATCH",url:homePath+"api/"+e+"/ApplicationRoleUserAccount/UpdateArray",contentType:"application/json; charset=utf-8",dataType:"json",data:JSON.stringify(t),cache:!0,async:!0})}function l(e,t){return $.ajax({type:"GET",url:homePath+"api/"+t+"/ApplicationRoleUserAccount/"+e,contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function u(){return $.ajax({type:"GET",url:homePath+"api/SystemCenter/TSC",contentType:"application/json; charset=utf-8",dataType:"json",cache:!0,async:!0})}function p(e,t){return"AccountName"==t||"Name"==t?null!=e.Name&&e.Name.length>0&&e.Name.length<=200:"Password"==t?null==e.Password||e.Password.length<=200:"FirstName"==t?null==e.FirstName||e.FirstName.length<=200:"LastName"==t?null==e.LastName||e.LastName.length<=200:"Phone"==t?null==e.Phone||e.Phone.length<=200:"Email"==t?null==e.Email||e.Email.length<=200:"Title"==t?null==e.Title||e.Title.length<=200:"MobilePhone"==t&&(null==e.MobilePhone||e.MobilePhone.length<=200)}function d(e,t){return $.ajax({type:"GET",url:homePath+"api/"+e+"/AccessLog/Aggregates/"+t,contentType:"application/json; charset=utf-8",dataType:"json",cache:!1,async:!0})}function h(e,t){return $.ajax({type:"GET",url:homePath+"api/"+e+"/AccessLog/Table/"+t,contentType:"application/json; charset=utf-8",dataType:"json",cache:!1,async:!0})}n.d(t,"f",(function(){return r})),n.d(t,"d",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"e",(function(){return o})),n.d(t,"g",(function(){return i})),n.d(t,"j",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return u})),n.d(t,"k",(function(){return p})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}))},92:function(e,t,n){"use strict";var r,a=n(0),s=n(31),o=(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=this;return a.createElement("div",{className:"form-group"},a.createElement("label",null,null==this.props.Label?this.props.Field:this.props.Label),a.createElement("input",{className:"form-control",type:"date",onChange:function(t){var n=s.clone(e.props.Record);""!=t.target.value?n[e.props.Field]=t.target.value:n[e.props.Field]=null,e.props.Setter(n)},value:null==this.props.Record[this.props.Field]?"":this.props.Record[this.props.Field].toString(),disabled:null!=this.props.Disabled&&this.props.Disabled}))},t}(a.Component);t.a=i},93:function(e,t,n){"use strict";var r,a=n(0),s=n(31),o=(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=this;return a.createElement("div",{className:"form-group"},a.createElement("label",null,null==this.props.Label?this.props.Field:this.props.Label),a.createElement("select",{className:"form-control",onChange:function(t){var n=s.clone(e.props.Record);""!=t.target.value?n[e.props.Field]=t.target.value:n[e.props.Field]=null,e.props.Setter(n)},value:null==this.props.Record[this.props.Field]?"":this.props.Record[this.props.Field].toString(),disabled:null!=this.props.Disabled&&this.props.Disabled},this.props.EmptyOption?a.createElement("option",{value:""}):null,this.props.Options.map((function(e,t){return a.createElement("option",{key:t,value:e.Value},e.Label)}))))},t}(a.Component);t.a=i}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,